{"version":3,"sources":["theme/ColorModeSwitcher.tsx","utils/token.ts","http/client.ts","provider/AuthProvider.tsx","hooks/usePasswordValidation.jsx","views/AuthViews/validPasswordChecklist.tsx","utils/typesDefinitions.ts","assets/DoctorsInComputerImage.svg","components/TimeLine/TimeLine.tsx","components/TimeLine/TimeLineItem.tsx","components/EmptyState.tsx","views/Conditions/ConditionsTimeLine.tsx","views/Conditions/ConditionsTable.tsx","views/Medic/PatientsTable.tsx","utils/utils.ts","views/Conditions/NewConditionForm.tsx","components/ActionButton.tsx","components/HomeDrawer.tsx","views/Patient/ShareHistoryForm.tsx","components/TableSkeleton.tsx","components/TimeLine/TimeLineSkeleton.tsx","assets/SecureImage.svg","assets/DoctorWithPhoneImage.svg","assets/PresonInComputerImage.svg","views/Landing/Landing.tsx","assets/NotFoundImage.svg","views/NotFoundPage/NotfoundPage.tsx","assets/PowerPeople_Emma.png","components/PresentationCard.tsx","components/PresentationSkeletonCard.tsx","views/Profile/ChangePasswordForm.tsx","views/Profile/ListInput.tsx","views/Profile/ArrInput.tsx","views/Profile/ProfileForm.tsx","views/Patient/MedicsTable.tsx","routes/routes.ts","views/AuthViews/LoginView.tsx","views/AuthViews/SignUpView.tsx","views/Profile/ProfileView.tsx","views/Landing/Home.tsx","views/Patient/PatientConditions.tsx","views/Patient/SharedWith.tsx","views/Navbar/Navbar.tsx","views/Footer/Footer.tsx","views/AuthViews/LoadingView.tsx","routes/AppRouter.tsx","theme/customTheme.tsx","DoctoryApp.tsx","reportWebVitals.ts","serviceWorker.ts","index.tsx"],"names":["ColorModeSwitcher","display","toggleColorMode","useColorMode","text","useColorModeValue","SwitchIcon","FaMoon","FaSun","size","variant","color","mx","onClick","icon","aria-label","getToken","localStorage","getItem","setToken","token","setItem","clearToken","removeItem","http","url","document","location","origin","fetch","this","headers","res","json","data","status","types","fields","method","body","JSON","stringify","values","Object","keys","errors","map","key","join","Error","id","params","payload","x","allergies","specialties","defaultContextValues","authContext","type","isLoggedIn","isLoading","login","logout","UserContext","createContext","AuthProvider","children","useState","setAuthContext","useEffect","getUserType","then","undefined","Provider","value","_","usePasswordValidation","password","requiredLength","hasNumber","hasUpperCase","hasLowerCase","hasSpecialChar","hasValidLength","isValid","validPassword","setValidPassword","validation","test","toLowerCase","toUpperCase","length","ValidPasswordChecklist","iconStates","textStates","valid","invalid","fontSize","spacing","alignItems","as","CheckIcon","userTypes","sexTypes","label","TimeLine","useMediaQuery","theme","breakpoints","md","isMobile","w","h","maxW","d","flexDirection","flexGrow","pb","className","position","my","mb","sx","backgroundColor","content","left","width","height","TimeLineItem","conditionTitle","date_of_diagnosis","conditionDescription","justifyContent","paddingRight","paddingLeft","m","alignSelf","textAlign","right","p","boxShadow","rounded","bg","top","transform","isTruncated","noOfLines","whiteSpace","fontWeight","borderRadius","zIndex","EmptyState","ConditionsTimeLine","conditions","condition","name","description","ConditionsTable","lg","ml","background_subtype_name","PatientsTable","patients","linkColor","patient","Link","to","routes","path","replace","String","first_name","last_name","dob","blood_type","isValidDate","Date","parse","now","NewConditionForm","formId","onSubmit","backgroundSubtypes","useForm","register","handleSubmit","isRequired","isInvalid","Boolean","htmlFor","autoComplete","placeholder","ref","required","message","background_subtype","validate","ActionButton","AddIcon","cursor","_hover","HomeDrawer","drawerPlacement","isOpen","onClose","headerText","Form","buttonProps","placement","borderBottomWidth","form","leftIcon","colorScheme","ShareHistoryForm","email","TableSkeleton","items","index","push","base","TimeLineSkeleton","bulletList","title","listItems","NotfoundPage","useContext","maxH","src","NotFoundImage","home","default","PresetationCard","userData","avatar","textOverflow","overflow","PresentationSkeletonCard","ChangePasswordForm","initialPassword","setInitialPassword","setPassword","onChange","e","target","password2","onPaste","preventDefault","ListInput","setData","disabled","toBeDeleted","setToBeDeleted","actionIcon","DeleteIcon","RepeatIcon","toBeDeletedSyles","textDecoration","style","oldData","newToBeAdded","toBeAdded","filter","ArrInput","labelText","fetched","isFullWidth","lastId","ProfileForm","setAllergies","setSpecialities","onOpenDrawer","setValue","defaultValue","sex","includes","license","align","MedicsTable","medics","deleteMedic","medic","specialty","Number","publicRoutes","component","landingImage","useBreakpointValue","DoctorWithPhoneImage","DoctorsInComputerImage","justify","py","alt","sm","xl","signup","SecureImage","direction","list","i","item","indx","PresonInComputerImage","history","useHistory","toast","useToast","toastPosition","mutate","useMutation","onSuccess","onError","duration","isClosable","px","minW","pattern","MB","contact","notFound","protectedRoutes","profile","setIsLoading","setSpecialties","useDisclosure","onOpen","useQuery","getProfileInfo","ok","onSettled","mutateProfile","updateProfile","mutateNewAllergies","newAllergies","oldAllergies","mutateDeleteAllergies","deleteAllergies","deletedAllergies","newFetched","mutateNewSpecialties","newSpecialties","oldSpecialties","mutateDeleteSpecalties","deleteSpecialtes","deletedSpecialties","oldSpecalties","mutatePassword","updatePassword","boxSize","borderColor","patientId","useParams","lastTabIndex","setPatients","setBackgroundSubtype","setConditions","tabIndex","setTabIndex","drawerContent","setDrawerContent","isMedic","mutateNewCondition","newCondition","conds","sort","y","onSubmitNewCondition","mutateShareHistory","shareHistory","onSubmitShare","isPatintsFetched","getPatients","enabled","isFetchedAfterMount","isConditionsFetched","pt","isFitted","overflowX","mr","bottom","MdShare","Add","setUserData","isProfileFetched","sharedWith","setMedics","isMedicsFetched","getMedics","mutateDeleteMedic","removeShare","newMedics","med","Navbar","onToggle","navbarItems","setNavbarItems","homePath","setHomePath","mobileContainerHover","loggedInItems","minH","borderBottom","borderStyle","flex","Close","Hamburger","fontFamily","navItem","in","animateOpacity","Footer","borderTop","marginStart","getFullYear","LoadingView","isIndeterminate","AppRouter","k","exact","render","Component","customTheme","extendTheme","colors","primary","50","100","200","300","400","500","600","700","800","900","queryClient","QueryClient","DoctoryApp","QueryClientProvider","client","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","window","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.e0fa8945.chunk.js","sourcesContent":["import * as React from \"react\"\nimport {\n  useColorMode,\n  useColorModeValue,\n  IconButton,\n} from \"@chakra-ui/react\"\nimport { FaMoon, FaSun } from \"react-icons/fa\"\n\ntype swtchProps = {\n  display?: { base: string; md: string; },\n}\n\nexport const ColorModeSwitcher = ({display}: swtchProps) => {\n  const { toggleColorMode } = useColorMode()\n  const text = useColorModeValue(\"dark\", \"light\")\n  const SwitchIcon = useColorModeValue(FaMoon, FaSun)\n\n  return (\n    <>\n      <IconButton \n        display={display}\n        size=\"md\"\n        variant=\"ghost\"\n        color=\"current\"\n        mx={2}\n        onClick={toggleColorMode}\n        icon={<SwitchIcon />}\n        aria-label= {`Switch to ${text} mode`}\n      />\n    </>\n  )\n}\n","\nexport const getToken = () => {\n  return localStorage.getItem('doctory_token');\n}\nexport const setToken = (token: string) => {\n  localStorage.setItem('doctory_token', token);\n}\nexport const clearToken = () => {\n  localStorage.removeItem('doctory_token');\n}","import { \n  UserInformation,\n  LoginData,\n  SignUpData,\n  ConditionData,\n  ChangePasswordData,\n  ShareData,\n  Allergy,\n  Specialty\n} from './types';\nimport { getToken, setToken } from '../utils/token';\n\nclass Http {\n  private url = process.env.NODE_ENV === 'development' ? 'http://localhost:8000' : document.location.origin;\n\n  public async getUserType() {\n    const res = await fetch(`${this.url}/api/v1/type/`, {\n      headers: {\n        'Authorization': `Token ${getToken()}`\n      }\n    });\n    const data = await res.json();\n\n    if(res.status === 200) return data.data.types;\n    return null;\n  }\n\n  public async login(fields:LoginData) {\n    const res = await fetch(`${this.url}/api/v1/login/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(fields)\n    });\n    const data = await res.json();\n    \n    if(res.status === 200) {\n      setToken(data.data.token);\n      return data.data.types;\n    }\n    \n    const values = Object.keys(data.errors).map(key => data.errors[key].join(';'))[0]\n    if(res.status === 400) throw new Error(values)\n    if(res.status === 500) throw new Error('Error con el servidor. Contacte al equipo administrador.')\n  }\n\n  public async signup(fields:SignUpData) {\n    const res = await fetch(`${this.url}/api/v1/signup/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(fields)\n    });\n    const data = await res.json();\n\n    if(res.status === 201) {\n      setToken(data.data.token);\n      return data.data.types;\n    }\n    const values = Object.keys(data.errors).map(key => data.errors[key].join(';'))[0]\n    if(res.status === 400) throw new Error(values)\n    if(res.status === 500) throw new Error('Error con el servidor. Contacte al equipo administrador.')\n  }\n  \n  public async newCondition(fields:ConditionData) {\n    const res = await fetch(`${this.url}/api/v1/conditions/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${getToken()}`\n      },\n      body: JSON.stringify(fields)\n    });\n    const data = await res.json();\n\n    if(res.status === 201) return data.data;\n\n    const values = Object.keys(data.errors).map(key => data.errors[key].join(';'))[0]\n    if(res.status === 400) throw new Error(values)\n    if(res.status === 500) throw new Error('Error con el servidor. Contacte al equipo administrador.')\n  }\n\n  public async conditions(id:number|null = null) {\n    const params = id? `?patient_id=${id}` : ''\n    const res = await fetch(`${this.url}/api/v1/conditions/${params}`, {\n      headers: {\n        'Authorization': `Token ${getToken()}`\n      }\n    });\n    const data = await res.json();\n    \n    if(res.status === 200) return data.data;\n    \n    const values = Object.keys(data.errors).map(key => data.errors[key].join(';'))[0]\n    if(res.status === 400) throw new Error(values)\n    if(res.status === 500) throw new Error('Error con el servidor. Contacte al equipo administrador.')\n  }\n\n  public async backgroundSubtypes() {\n    const res = await fetch(`${this.url}/api/v1/background-subtypes/`, {\n      headers: {\n        'Authorization': `Token ${getToken()}`\n      }\n    });\n    const data = await res.json();\n    if(res.status === 200) return data.data;\n\n    const values = Object.keys(data.errors).map(key => data.errors[key].join(';'))[0]\n    if(res.status === 400) throw new Error(values)\n    if(res.status === 500) throw new Error('Error con el servidor. Contacte al equipo administrador.')\n  }\n\n  public async getProfileInfo(id:number|null = null) {\n    const params = id? `?patient_id=${id}` : ''\n    const res = await fetch(`${this.url}/api/v1/profile/${params}`, {\n      headers: {\n        'Authorization': `Token ${getToken()}`\n      }\n    });\n    const data = await res.json();\n\n    if(res.status === 200) return data.data;\n    \n    const values = Object.keys(data.errors).map(key => data.errors[key].join(';'))[0]\n    if(res.status === 400) throw new Error(values)\n    if(res.status === 500) throw new Error('Error con el servidor. Contacte al equipo administrador.')\n  }\n\n  public async updateProfile(fields:UserInformation) {\n    const res = await fetch(`${this.url}/api/v1/profile/`, {\n      method: 'PUT',\n      headers: {\n        'Authorization': `Token ${getToken()}`,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(fields)\n    });\n    const data = await res.json();\n\n    if(res.status === 200) return data.data;\n    \n    const values = Object.keys(data.errors).map(key => data.errors[key].join(';'))[0]\n    if(res.status === 400) throw new Error(values)\n    if(res.status === 500) throw new Error('Error con el servidor. Contacte al equipo administrador.')\n  }\n\n  public async newAllergies(fields: Allergy[]) {\n    const res = await fetch(`${this.url}/api/v1/allergy/`, {\n      method: 'POST',\n      headers: {\n        'Authorization': `Token ${getToken()}`,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(fields)\n    });\n    const data = await res.json();\n    \n    if(res.status === 201) return data.data;\n    \n    const values = Object.keys(data.errors).map(key => data.errors[key].join(';'))[0]\n    if(res.status === 400) throw new Error(values)\n    if(res.status === 500) throw new Error('Error con el servidor. Contacte al equipo administrador.')\n  }\n\n  public async deleteAllergies(fields: Allergy[]) {\n    const payload=fields.map(x => x.id);\n    const res = await fetch(`${this.url}/api/v1/allergy/`, {\n      method: 'DELETE',\n      headers: {\n        'Authorization': `Token ${getToken()}`,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({allergies:payload})\n    });\n    \n    if(res.status === 204) return payload;\n    \n    const data = await res.json();\n    const values = Object.keys(data.errors).map(key => data.errors[key].join(';'))[0]\n    if(res.status === 404) throw new Error(values)\n    if(res.status === 500) throw new Error('Error con el servidor. Contacte al equipo administrador.')\n  }\n\n  public async newSpecialties(fields: Specialty[]) {\n    const res = await fetch(`${this.url}/api/v1/specialty/`, {\n      method: 'POST',\n      headers: {\n        'Authorization': `Token ${getToken()}`,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(fields)\n    });\n    const data = await res.json();\n\n    if(res.status === 201) return data.data;\n    \n    const values = Object.keys(data.errors).map(key => data.errors[key].join(';'))[0]\n    if(res.status === 400) throw new Error(values)\n    if(res.status === 500) throw new Error('Error con el servidor. Contacte al equipo administrador.')\n  }\n\n  public async deleteSpecialtes(fields: Specialty[]) {\n    const payload=fields.map(x => x.id);\n    const res = await fetch(`${this.url}/api/v1/specialty/`, {\n      method: 'DELETE',\n      headers: {\n        'Authorization': `Token ${getToken()}`,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({specialties:payload})\n    });\n    \n    if(res.status === 204) return payload;\n    \n    const data = await res.json();\n    const values = Object.keys(data.errors).map(key => data.errors[key].join(';'))[0]\n    if(res.status === 404) throw new Error(values)\n    if(res.status === 500) throw new Error('Error con el servidor. Contacte al equipo administrador.')\n  }\n\n  public async updatePassword(fields:ChangePasswordData) {\n    const res = await fetch(`${this.url}/api/v1/change-password/`, {\n      method: 'PUT',\n      headers: {\n        'Authorization': `Token ${getToken()}`,\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(fields)\n    });\n    const data = await res.json();\n\n    if(res.status === 200) return data.data;\n    \n    const values = Object.keys(data.errors).map(key => data.errors[key].join(';'))[0]\n    if(res.status === 400) throw new Error(values)\n    if(res.status === 500) throw new Error('Error con el servidor. Contacte al equipo administrador.')\n  }\n\n  public async getPatients() {\n    const res = await fetch(`${this.url}/api/v1/patients/`, {\n      headers: {\n        'Authorization': `Token ${getToken()}`\n      }\n    });\n    const data = await res.json();\n\n    if(res.status === 200) return data.data;\n    \n    const values = Object.keys(data.errors).map(key => data.errors[key].join(';'))[0]\n    if(res.status === 400) throw new Error(values)\n    \n    if(res.status === 500) throw new Error('Error con el servidor. Contacte al equipo administrador.')\n  }\n\n  public async shareHistory(fields:ShareData) {\n    const res = await fetch(`${this.url}/api/v1/share-history/`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Token ${getToken()}`\n      },\n      body: JSON.stringify(fields)\n    });\n    \n    const data = await res.json();\n    if(res.status === 201) return data.data;\n\n    const values = Object.keys(data.errors).map(key => data.errors[key]).join(';')\n    if(res.status === 400) throw new Error(values)\n    if(res.status === 404) throw new Error(values)\n    if(res.status === 500) throw new Error('Error con el servidor. Contacte al equipo administrador.')\n  }\n\n  public async getMedics() {\n    const res = await fetch(`${this.url}/api/v1/shared-with/`, {\n      headers: {\n        'Authorization': `Token ${getToken()}`\n      }\n    });\n    const data = await res.json();\n\n    if(res.status === 200) return data.data;\n    \n    const values = Object.keys(data.errors).map(key => data.errors[key].join(';'))[0]\n    if(res.status === 400) throw new Error(values)\n    if(res.status === 500) throw new Error('Error con el servidor. Contacte al equipo administrador.')\n  }\n\n  public async removeShare(id:number) {\n    const params = id? `${id}` : '';\n    \n    const res = await fetch(`${this.url}/api/v1/shared-with/${params}/`, {\n      method: 'DELETE',\n      headers: {\n        'Authorization': `Token ${getToken()}`\n      },\n    });\n    \n    \n    if(res.status === 204) return {id};\n    \n    const data = await res.json();\n    const values = Object.keys(data.errors).map(key => data.errors[key]).join(';')\n    if(data.status === 404) throw new Error(values)\n    if(data.status === 500) throw new Error('Error con el servidor. Contacte al equipo administrador.')\n  }\n}\n\nexport const http = new Http();\n","import React, { useState, FC, useEffect } from 'react';\nimport { createContext } from \"react\";\nimport { http } from '../http/client';\nimport { clearToken, getToken } from '../utils/token';\n\n\ntype authContextStateType = {\n  type?: string[],\n  isLoggedIn: boolean,\n  isLoading: boolean,\n}\n\ntype authContextType = {\n  authContext: authContextStateType,\n  login: (type: string[]) => void,\n  logout: () => void,\n}\n\nconst defaultContextValues: authContextType = {\n  authContext: { type: [''], isLoggedIn: false, isLoading: true },\n  login: () => {},\n  logout: () => {},\n}\n// Context\nexport const UserContext = createContext<authContextType>(defaultContextValues);\n\n// Provider\nexport const AuthProvider : FC = ({ children }) => {\n  \n  const [authContext, setAuthContext] = useState<authContextStateType>(defaultContextValues.authContext);\n\n  const login = (type : string[]) => {\n    setAuthContext(_ => ({\n      type,\n      isLoggedIn: true,\n      isLoading: false,\n    }));\n  };\n\n  const logout = () => {\n    clearToken();\n    setAuthContext(_ => ({\n      type: [''],\n      isLoggedIn: false,\n      isLoading: false,\n    }));\n  };\n\n  useEffect(() => {\n    if(getToken()) { // If there's already a Token in storage we validate it\n      http.getUserType().then(type => {\n        if(!type) {\n          clearToken();\n          setAuthContext({type:undefined, isLoggedIn: false, isLoading: false})\n        }else{\n          setAuthContext({type:type, isLoggedIn: true, isLoading: false})\n        }\n      })\n    }else{\n      setAuthContext({type:undefined, isLoggedIn: false,  isLoading: false})\n    }\n\n  }, []);\n\n  return (\n    <UserContext.Provider value={{ authContext, login, logout }}>\n      {children}\n    </UserContext.Provider>\n  );\n}\n","import { useState, useEffect } from 'react'\n\nexport const usePasswordValidation = ({\n  password = '',\n  requiredLength = 8,\n}) => {\n  const [validPassword, setValidPassword] = useState({\n    hasNumber: null,\n    hasUpperCase: null,\n    hasLowerCase: null,\n    hasSpecialChar: null,\n    hasValidLength: null,\n    isValid: null,\n  })\n\n  useEffect(() => {\n    const validation = {};\n    validation.hasNumber = /\\d/.test(password);\n    validation.hasUpperCase = password.toLowerCase() !== password;\n    validation.hasLowerCase = password.toUpperCase() !== password;\n    validation.hasSpecialChar = /[ `!@#$%^&*()_+\\-=\\]{};':\"\\\\|,.<>?~]/.test(password);\n    validation.hasValidLength = password.length >= requiredLength;\t\t\n    validation.isValid = validation.hasNumber && validation.hasUpperCase && validation.hasLowerCase && validation.hasSpecialChar && validation.hasValidLength;\n    setValidPassword(validation);\n  }, [password, requiredLength])\n  \n\n  return validPassword;\n}\n","import React from 'react'\nimport { CheckIcon } from '@chakra-ui/icons'\nimport { List, ListItem, ListIcon, useColorModeValue } from '@chakra-ui/react'\n\ntype passwordChecklistPropsTypes = {\n  hasNumber: boolean,\n  hasUpperCase: boolean,\n  hasLowerCase: boolean,\n  hasSpecialChar: boolean,\n  hasValidLength: boolean\n}\n\nexport const ValidPasswordChecklist = ({\n  hasNumber,\n  hasUpperCase,\n  hasLowerCase,\n  hasSpecialChar,\n  hasValidLength,\n}: passwordChecklistPropsTypes) => {\n  const iconStates = {\n    valid: 'green.500',\n    invalid: 'gray.500',\n  }\n  const textStates = {\n    valid: useColorModeValue('gray.800','gray.100'),\n    invalid: 'gray.500',\n  }\n  return (\n    <List fontSize={'0.75em'} spacing={2}>\n      <ListItem\n        color={hasNumber ? textStates.valid : textStates.invalid}\n        display='flex'\n        alignItems='center'\n      >\n        <ListIcon\n          as={CheckIcon}\n          color={hasNumber ? iconStates.valid : iconStates.invalid}\n        />\n        Contiene un número\n      </ListItem>\n      <ListItem\n        color={hasUpperCase ? textStates.valid : textStates.invalid}\n        display='flex'\n        alignItems='center'\n      >\n        <ListIcon\n          as={CheckIcon}\n          color={hasUpperCase ? iconStates.valid : iconStates.invalid}\n        />\n        Contiene una mayúscula\n      </ListItem>\n      <ListItem\n        color={hasLowerCase ? textStates.valid : textStates.invalid}\n        display='flex'\n        alignItems='center'\n      >\n        <ListIcon\n          as={CheckIcon}\n          color={hasLowerCase ? iconStates.valid : iconStates.invalid}\n        />\n        Contiene una minúscula\n      </ListItem>\n      <ListItem\n        color={hasSpecialChar ? textStates.valid : textStates.invalid}\n        display='flex'\n        alignItems='center'\n      >\n        <ListIcon\n          as={CheckIcon}\n          color={hasSpecialChar ? iconStates.valid : iconStates.invalid}\n        />\n        Contiene un caracter especial\n      </ListItem>\n      <ListItem\n        color={hasValidLength ? textStates.valid : textStates.invalid}\n        display='flex'\n        alignItems='center'\n      >\n        <ListIcon\n          as={CheckIcon}\n          color={hasValidLength ? iconStates.valid : iconStates.invalid}\n        />\n        Contiene mínimo 8 caracteres\n      </ListItem>\n    </List>\n  )\n}\n","import { Allergy, Specialty } from \"../http/types\"\n\nexport const userTypes = {\n  PATIENT: 'PAT',\n  MEDIC: 'MED',\n}\n\nexport const sexTypes = [\n  {value: 'F', label: 'Mujer'},\n  {value: 'M', label: 'Hombre'},\n  {value: 'O', label: 'Otro'},\n  {value: 'U', label: 'Sin especificar'},\n]\n\nexport type timeLineItemProps = {\n  conditionTitle: string,\n  date_of_diagnosis: string,\n  conditionType?: string,\n  conditionSubtype?: string,\n  conditionDescription?: string,\n}\n\nexport type InputArrType = {\n  fetched: Allergy[] | Specialty[];\n  toBeDeleted: Allergy[] | Specialty[];\n  toBeAdded: Allergy[] | Specialty[];\n}","export default __webpack_public_path__ + \"static/media/DoctorsInComputerImage.9b5784fb.svg\";","import React, { FC } from 'react'\nimport theme from '@chakra-ui/theme'\nimport { useColorModeValue } from '@chakra-ui/color-mode'\nimport { Box, Container } from '@chakra-ui/layout'\nimport { useMediaQuery } from '@chakra-ui/media-query'\n\nexport const TimeLine:FC = ({children}) => {\n\n  const [isMobile] = useMediaQuery(`(max-width: ${theme.breakpoints.md}`);\n\n  return (\n    <Container\n      w=\"100%\"\n      h=\"100%\"\n      maxW=\"100%\"\n      d={'flex'}\n      flexDirection='column'\n      flexGrow={1}\n      pb='0'\n    >\n      <Box\n        className='timeline-container'\n        d='flex'\n        flexDirection='column'\n        position='relative'\n        my='2em'\n        mb='0'\n        pb='2em'\n        sx={{\n          '::after':{\n            backgroundColor: useColorModeValue('primary.500','primary.800'),\n            content:'\"\"',\n            position: 'absolute',\n            left: `${isMobile? '-0.1em': 'calc(50% - 0.1em)'}`, //(50% - 1/2(width))\n            width: '.2em',  //line with\n            height: '100%',\n          }\n        }}\n      >\n        {children}\n      </Box>\n    </Container>\n  )\n}","import React from 'react'\nimport theme from '@chakra-ui/theme'\nimport { useColorModeValue } from '@chakra-ui/color-mode'\nimport { Box, Text, VStack } from '@chakra-ui/layout'\nimport { timeLineItemProps } from '../../utils/typesDefinitions'\nimport { useMediaQuery } from '@chakra-ui/media-query'\n\nexport const TimeLineItem = ({conditionTitle, date_of_diagnosis, conditionDescription}:timeLineItemProps) => {\n  const [isMobile] = useMediaQuery(`(max-width: ${theme.breakpoints.md}`);\n  return (\n    <Box\n      className='timeline-item'\n      position='relative'\n      d='flex'\n      justifyContent='flex-end'\n      paddingRight={`${isMobile? 'unset':'2em'}`} //distance between card and line\n      paddingLeft={`${isMobile? '2em':'unset'}`} //distance between card and line\n      m='.5em 0'\n      width={`${isMobile? '100%':'50%'}`}\n      sx={{\n        ':nth-of-type(odd)': {\n          alignSelf: 'flex-end',\n          justifyContent: 'flex-start',\n          paddingLeft: '2em', //distance between card and line\n          paddingRight: '0',\n        },\n        ':nth-of-type(odd) .timeline-item-content':{\n          textAlign: 'left',\n          alignItems:'flex-start',\n        },\n        ':nth-of-type(odd) .timeline-item-content::after':{ //little triangle of cards\n          right: 'auto',\n          left: '-.5em'\n        },\n        ':nth-of-type(odd) .timeline-item-content .circle':{\n          right: 'auto',\n          left: '-2.5em', //distance form card to circle (paddingRight from card + half of circle's with)\n        }\n      }}\n    >\n      <VStack\n        alignItems='flex-end'\n        p='1em'\n        spacing='0'\n        className='timeline-item-content'\n        boxShadow='lg'\n        rounded='lg'\n        bg={useColorModeValue('white', 'gray.700')}\n        w='100%'\n        textAlign={isMobile? 'left':'right'} \n        position='relative'\n        sx={{\n          '::after':{  //little triangle of cards\n            content:`' '`,\n            backgroundColor: useColorModeValue('white', 'gray.700'),\n            position: 'absolute',\n            top: 'calc(50% - 0.5em)',\n            right: `${isMobile? 'unset':'-0.5em'}`,\n            left: `${isMobile? '-.5em':'unset'}`,\n            transform: 'rotate(45deg)',\n            width: '1em',\n            height: '1em',\n          }\n        }}\n      >\n        <Text \n          isTruncated\n          noOfLines={1}\n          whiteSpace='normal'\n          fontSize='lg'\n          fontWeight='medium'\n          w='100%'\n        >\n          {conditionTitle}\n        </Text>\n        <Text \n          m={'0'}\n          isTruncated\n          noOfLines={1}\n          whiteSpace='normal'\n          fontSize='xs'\n          fontWeight='medium'\n          textAlign='right'\n          w='100%'\n        >\n          {date_of_diagnosis}\n        </Text>\n        {conditionDescription &&\n        <Text\n          isTruncated\n          noOfLines={3}\n          whiteSpace='normal'\n          fontSize='xs'\n          fontWeight='normal'\n          textAlign='left'\n          w='100%'\n        >\n          {conditionDescription}\n        </Text>}\n        {/* Point of card in line */}\n        <Box as='span' \n          className=\"circle\" \n          bg={useColorModeValue('primary.500','primary.800')}\n          borderRadius='50%'\n          position='absolute'\n          top='calc(50% - .5em)' //half of height\n          w='1em'\n          h='1em'\n          right= {`${isMobile? 'unset':'-2.5em'}`} //distance form card to circle (paddingRight from card + half of circle's with)\n          left={`${isMobile? '-2.5em':'unset'}`}\n          zIndex='1' // circle on top from line\n        />\n      </VStack>\n    </Box>\n  )\n}\n","import React from 'react'\nimport { VStack, Text, useColorModeValue } from '@chakra-ui/react'\n\ntype emptyStateProps ={\n  text: string\n}\n\nexport const EmptyState = ({text}:emptyStateProps) => {\n  \n  return (\n    <VStack flexGrow={1} justifyContent='center'>\n      <Text textAlign='center' fontSize='4xl' my='4em' color={useColorModeValue('gray.600', 'gray.200')}>\n        {text}\n      </Text>\n    </VStack>\n  )\n}\n","import React from 'react';\nimport { TimeLine } from '../../components/TimeLine/TimeLine';\nimport { TimeLineItem } from '../../components/TimeLine/TimeLineItem';\nimport { ConditionData } from '../../http/types';\nimport { EmptyState } from '../../components/EmptyState';\n\ntype ConditionsTimeLineProps = {\n  conditions: ConditionData[];\n}\n\nexport const ConditionsTimeLine = ({ conditions }:ConditionsTimeLineProps) => {\n  \n  if(conditions.length === 0){\n    return <EmptyState text='Sin condiciones' />\n  }\n\n  return(\n    <TimeLine>\n      {conditions.map((condition:ConditionData) => (\n        <TimeLineItem \n          key={condition.id}\n          conditionTitle={condition.name}\n          date_of_diagnosis={condition.date_of_diagnosis}\n          conditionDescription={condition.description}\n        />\n      ))}\n    </TimeLine>\n  )\n}","import React from 'react';\nimport {\n  Table,\n  Thead,\n  Tbody,\n  Tr,\n  Th,\n  Td,\n} from \"@chakra-ui/react\"\nimport { ConditionData } from '../../http/types';\nimport { EmptyState } from '../../components/EmptyState';\n\ntype ConditionsTableProps = {\n  conditions: ConditionData[];\n}\n\nexport const ConditionsTable = ({ conditions }:ConditionsTableProps) => {\n\n  if(conditions.length === 0){\n    return <EmptyState text='Sin condiciones' />\n  }\n\n  return (\n    <Table variant=\"striped\" width={{lg:'150%'}} ml={{lg:'-25%'}}>\n      <Thead>\n        <Tr>\n          <Th>Nombre</Th>\n          <Th>Descripción</Th>\n          <Th>Fecha de diagnóstico</Th>\n          <Th>Tipo de condición</Th>\n        </Tr>\n      </Thead>\n      <Tbody>\n        {\n          conditions.map((condition:ConditionData) => (\n            <Tr key={condition.id}>\n              <Td>{condition.name}</Td>\n              <Td>{condition.description}</Td>\n              <Td>{condition.date_of_diagnosis}</Td>\n              <Td>{condition.background_subtype_name}</Td>\n            </Tr>\n          ))\n        }\n      </Tbody>\n    </Table>\n  )\n}","import React from 'react';\nimport { Table, Tbody, Td, Th, Thead, Tr, Link as ChakraLink, useColorModeValue } from '@chakra-ui/react';\nimport { UserInformation } from '../../http/types';\nimport { Link } from 'react-router-dom';\nimport { routes } from '../../routes/routes';\nimport { EmptyState } from '../../components/EmptyState';\n\ntype PatientsTableProps = {\n  patients: UserInformation[];\n};\n\nexport const PatientsTable = ({ patients }: PatientsTableProps) => {\n  const linkColor = useColorModeValue('blue.600', 'blue.400');\n  \n  if(patients.length === 0){\n    return <EmptyState text='Sin pacientes' />\n  }\n\n  return (\n    <Table variant=\"striped\">\n      <Thead>\n        <Tr>\n          <Th>Nombre</Th>\n          <Th>Edad</Th>\n          <Th>Tipo de sangre</Th>\n        </Tr>\n      </Thead>\n      <Tbody>\n        {patients.map((patient) => (\n          <Tr key={patient.id}>\n            <Td>\n              <ChakraLink \n                as={Link} \n                to={routes.patient.path.replace(':id', String(patient.id))}\n                color={linkColor}\n              >\n              {patient.first_name + ' ' + patient.last_name}\n              </ChakraLink>\n            </Td>\n            <Td>{patient.dob || '-'}</Td>\n            <Td>{patient.blood_type || '-'}</Td>\n          </Tr>\n        ))}\n      </Tbody>\n    </Table>\n  );\n};\n","export const isValidDate = (value:string) => {\n  const date_of_diagnosis = Date.parse(value);\n  return date_of_diagnosis < Date.now();\n}","import React from 'react';\nimport {\n  Stack,\n  FormControl,\n  FormLabel,\n  Input,\n  FormErrorMessage,\n  Textarea,\n  Select\n} from '@chakra-ui/react';\nimport { BackgroundSubtypeData, ConditionData } from '../../http/types';\nimport { useForm } from 'react-hook-form';\nimport { isValidDate } from '../../utils/utils';\n\ntype NewConditionProps = {\n  formId: string;\n  onSubmit: (values:ConditionData) => void;\n  backgroundSubtypes: BackgroundSubtypeData[];\n}\n\nexport const NewConditionForm = ({ formId, onSubmit, backgroundSubtypes }: NewConditionProps) => {\n  const { register, handleSubmit, errors } = useForm<ConditionData>();\n\n  return (\n    <Stack>\n      <form id={formId} onSubmit={handleSubmit(onSubmit)}>\n        <FormControl\n          isRequired\n          mb='4'\n          isInvalid={Boolean(errors.name)}>\n          <FormLabel htmlFor=\"name\">Nombre</FormLabel>\n          <Input\n            name=\"name\"\n            type=\"text\"\n            autoComplete='on'\n            placeholder='Diabetes tipo 1'\n            ref={register({required: 'El nombre es obligatorio'})}\n          />\n          <FormErrorMessage>\n            {errors.name && errors.name.message}\n          </FormErrorMessage>\n        </FormControl>\n        <FormControl mb='4' isInvalid={Boolean(errors.description)}>\n          <FormLabel htmlFor=\"description\">Description</FormLabel>\n          <Textarea\n            name=\"description\"\n            placeholder='Descripción de la condición'\n            ref={register()}\n            size=\"sm\"\n          />\n        </FormControl>\n        <FormControl\n          isRequired\n          mb='4'\n          isInvalid={Boolean(errors.background_subtype)}>\n          <FormLabel htmlFor=\"background_subtype\">Tipo de condición</FormLabel>\n          <Select\n            name=\"background_subtype\"\n            ref={register()}>\n            {backgroundSubtypes.map(x => <option key={x.id} value={x.id}>{x.name}</option>)}\n          </Select>\n        </FormControl>\n        <FormControl\n          isRequired\n          mb='4'\n          isInvalid={Boolean(errors.date_of_diagnosis)}>\n          <FormLabel htmlFor=\"date_of_diagnosis\">Fecha de diagnóstico</FormLabel>\n          <Input\n            name=\"date_of_diagnosis\"\n            type=\"date\"\n            autoComplete='on'\n            ref={register({\n              required: 'La fecha es obligatoria',\n              validate: value => isValidDate(value) || 'La fecha no es válida'\n            })}/>\n          <FormErrorMessage>\n            {errors.date_of_diagnosis && errors.date_of_diagnosis.message}\n          </FormErrorMessage>\n        </FormControl>\n      </form>\n    </Stack>\n  )\n}","import React from 'react'\nimport { ComponentWithAs, IconProps, Icon } from '@chakra-ui/react'\nimport { AddIcon } from '@chakra-ui/icons'\nimport { IconType } from 'react-icons/lib'\nimport { useColorModeValue } from '@chakra-ui/color-mode'\nimport { Box } from '@chakra-ui/layout'\n\ntype actionButonProps = {\n  icon?: IconType | ComponentWithAs<\"svg\", IconProps>\n}\n\nexport const ActionButton = ({icon = AddIcon}:actionButonProps) => {\n  return (\n    <Box\n      bg={useColorModeValue('primary.500', 'primary.200')}\n      rounded='50%'\n      cursor='pointer'\n      _hover={{\n        bg:useColorModeValue('primary.300', 'primary.300')\n      }}\n    >\n      <Icon \n        w='2em'\n        h='2em'\n        p='.5em'\n        color='white'\n        as={icon}\n      />\n    </Box>\n  )\n}\n","import React, { JSXElementConstructor, ReactElement } from 'react';\nimport {\n  Button,\n  Drawer,\n  DrawerBody,\n  DrawerCloseButton,\n  DrawerContent,\n  DrawerFooter,\n  DrawerHeader,\n  DrawerOverlay,\n  DrawerProps,\n} from '@chakra-ui/react';\nimport { IconType } from 'react-icons';\nimport { ReactJSXElement } from '@emotion/react/types/jsx-namespace';\n\nexport type buttonSubmit = {\n  text: string,\n  formId: string,\n  icon?: ReactElement<IconType, string | JSXElementConstructor<IconType>>,\n}\n\ntype homeDraweProps = {\n  drawerPlacement: DrawerProps['placement'],\n  isOpen: boolean,\n  onClose: () => void,\n  headerText: string,\n  Form: ReactJSXElement,\n  buttonProps: buttonSubmit,\n}\n\n\nexport const HomeDrawer = ({drawerPlacement, isOpen, onClose, headerText, Form, buttonProps}:homeDraweProps) => {\n  return (\n    <Drawer\n      placement={drawerPlacement}\n      isOpen={isOpen}\n      onClose={onClose}\n    >\n      <DrawerOverlay>\n        <DrawerContent>\n          <DrawerCloseButton />\n          <DrawerHeader borderBottomWidth=\"1px\">\n            {headerText}\n          </DrawerHeader>\n\n          <DrawerBody>\n            {Form}\n          </DrawerBody>\n\n          <DrawerFooter>\n              <Button\n                type=\"submit\"\n                form={buttonProps.formId}\n                leftIcon={buttonProps.icon}\n                colorScheme=\"primary\"\n              >\n                {buttonProps.text}\n              </Button>\n          </DrawerFooter>\n\n        </DrawerContent>\n      </DrawerOverlay>\n    </Drawer>\n  );\n};\n","import React from 'react';\nimport {\n  Stack,\n  FormControl,\n  FormLabel,\n  Input,\n  FormErrorMessage,\n} from '@chakra-ui/react';\nimport { ShareData } from '../../http/types';\nimport { useForm } from 'react-hook-form';\n\ntype ShareHistoryProps = {\n  formId: string;\n  onSubmit: (values:ShareData) => void;\n}\n\nexport const ShareHistoryForm = ({ formId, onSubmit}: ShareHistoryProps) => {\n  const { register, handleSubmit, errors } = useForm<ShareData>();\n\n  return (\n    <Stack>\n      <form id={formId} onSubmit={handleSubmit(onSubmit)}>\n        <FormControl\n          isRequired\n          mb='4'\n          isInvalid={Boolean(errors.email)}>\n          <FormLabel htmlFor=\"email\">Correo del médico</FormLabel>\n          <Input\n            name=\"email\"\n            type=\"text\"\n            autoComplete='on'\n            placeholder='medico@gmail.com'\n            ref={register({required: 'El correo electrónico del médico es obligatorio'})}\n          />\n          <FormErrorMessage>\n            {errors.email && errors.email.message}\n          </FormErrorMessage>\n        </FormControl>\n      </form>\n    </Stack>\n  )\n}","import { Box, Skeleton, VStack } from '@chakra-ui/react'\nimport React from 'react'\n\nexport const TableSkeleton = ({isLoading}:{isLoading:boolean}) => {\n  const numElements = 5;\n  const items = [];\n  \n  for (let index = 0; index < numElements; index++) {\n    items.push(\n      <Box key={index} width='100%'>\n        <Skeleton height='3rem' />\n      </Box>\n    )    \n  }\n  \n\n  if (isLoading) {\n    return (\n      <VStack width={{base:'100%', lg:'150%'}} ml={{lg:'-25%'}}>\n        {items}\n      </VStack>\n    )\n  } else {\n    return <></>\n  }\n\n}\n","import { Container, HStack, VStack } from '@chakra-ui/layout'\nimport { Box, theme, useMediaQuery } from '@chakra-ui/react';\nimport { Skeleton } from '@chakra-ui/skeleton'\nimport React from 'react'\n\nexport const TimeLineSkeleton = ({isLoading}:{isLoading:boolean}) => {\n  const [isMobile] = useMediaQuery(`(max-width: ${theme.breakpoints.md}`);\n  const numElements = 5;\n  const items = [];\n  \n  for (let index = 0; index < numElements; index++) {\n    items.push(\n      <HStack key={index} w='100%' justifyContent={(index % 2 === 0) ? 'flex-end' : 'flex-start'}>\n          <Box width={`${isMobile? '100%':'50%'}`} >\n            <Skeleton  height='5rem' />\n          </Box>\n      </HStack>\n    )    \n  }\n\n  if(isLoading) {\n    return (\n      <Container>\n        <VStack w='100%'>\n          {items}\n        </VStack>\n      </Container>\n    )\n  }else {\n    return <></>\n  }\n  \n}\n","export default __webpack_public_path__ + \"static/media/SecureImage.1ecb348c.svg\";","export default __webpack_public_path__ + \"static/media/DoctorWithPhoneImage.c8f46967.svg\";","export default __webpack_public_path__ + \"static/media/PresonInComputerImage.81476f02.svg\";","import React from 'react';\nimport { Button } from '@chakra-ui/button';\nimport { Image } from '@chakra-ui/react'\nimport { useColorModeValue } from '@chakra-ui/color-mode';\nimport { Box, Container, Flex, Heading, HStack, List, ListIcon, ListItem, Stack, Text, VStack } from '@chakra-ui/layout';\nimport { useBreakpointValue } from '@chakra-ui/media-query';\nimport { CheckIcon } from '@chakra-ui/icons';\nimport { Link } from 'react-router-dom';\nimport { routes } from '../../routes/routes';\nimport SecureImage from '../../assets/SecureImage.svg';\nimport DoctorsInComputerImage from '../../assets/DoctorsInComputerImage.svg';\nimport DoctorWithPhoneImage from '../../assets/DoctorWithPhoneImage.svg';\nimport PresonInComputerImage from '../../assets/PresonInComputerImage.svg';\n\nconst bulletList = [{\n  title: 'Con una cuenta de paciente:',\n  listItems: [\n    'Administrar tu historia médica',\n    'Compartir tu historia médica con tu doctor',\n    'Organizar tus estudios médicos'\n  ]\n},\n{\n  title: 'Con una cuenta de doctor:',\n  listItems: [\n    'Ver las historias médicas de tus pacientes',\n    'Organizar las notas de tus pacientes',\n    'Administrar tu historia médica',\n    'Organizar tus estudios médicos'\n  ]\n}, \n]\n\nexport const Landing = () => {\n\nconst landingImage = useBreakpointValue({ base: DoctorWithPhoneImage, md: DoctorsInComputerImage })\n\n  return (\n    <Container\n      w=\"100vw\"\n      h=\"100%\"\n      maxW=\"95%\"\n      d={'flex'}\n      flexGrow={1}\n      mx={{base:'1em', md:'2em'}}\n    >\n      <Flex\n        flexGrow={1}\n        align={'flex-start'}\n        justify={'center'}\n        py={12}\n        w={'100%'}\n      >\n        <VStack align=\"stretch\" spacing={{base: '5em', md:'10em'}} w={'100%'}>\n          {/**************  Call to Action Section **************/}\n          <HStack w={'100%'} justifyContent='center' spacing={'1em'}>\n            <Box  w={'55%'} maxW='60em' align='center'>\n              <Image src={landingImage} alt={'Doctory'}/>\n            </Box>\n            <Box w={'40%'} maxW={{sm:'xs', md:'sm', xl:'md'}} align='center'>\n                <Heading as='h1' \n                  textAlign='left'\n                  mb={{base:'1em', lg:'2em'}} \n                  fontSize={{base:'2xl', md:'4xl', lg:'6xl'}}\n                  color={useColorModeValue('primary.500', 'white')}\n                >\n                  Doctory\n                </Heading>\n              <Text fontSize={['xl', '2xl', '3xl', '4xl']} mb={'2em'} textAlign='left' fontWeight='medium'>\n                Administra tu historia clínica y compartela con tu doctor\n              </Text>\n              <Box textAlign='center' w={['90%', '50%']} >\n                <Link to={routes.signup.path}>\n                  <Button size={'md'} isFullWidth colorScheme={'primary'} >\n                    Unirse\n                  </Button>\n                </Link>\n              </Box>\n            </Box>\n          </HStack>\n          {/**************  Information is Secure Section **************/}\n          <HStack w={'100%'} justifyContent='center' spacing={{base:'1em', md:'3em'}}>\n            <Box  w={{base:'md', md:'xl'}} align='center'>\n              <Image src={SecureImage} alt={'Doctory'}/>\n            </Box>\n            <Box maxW={{base:'md', md:'sm'}} align='center'>\n              <Text fontSize={['xl', '2xl', '3xl', '4xl']} textAlign='left' fontWeight='normal'>\n                Tu información es segura y confidencial, tú decides con quien la compartes\n              </Text>\n            </Box>\n          </HStack>\n          {/************** Features Section **************/}\n          <Box>\n          <Text fontSize={['2xl', '3xl', '4xl', '5xl']} mb={'2em'} textAlign='center' fontWeight='medium'>\n           <Text as={'span'} color={useColorModeValue('primary.500', 'white')}>Doctory</Text> funciona para doctores y pacientes\n          </Text>\n          <Stack justifyContent='center' alignItems='center' direction={{base:'column-reverse', md:'row'}}>\n            <Box   maxW={'30em'} align='center' textAlign='left'>\n              {bulletList.map((list,i) => <div key={i+list.title}>\n                <Text key={'listTitle'+list.title} fontWeight='medium' fontSize='lg' mb={'1em'}>{list.title}</Text>\n                <List key={'listSection'+list.title}  spacing={3} mb={'2.5em'}>\n                {list.listItems.map((item, indx) => <div key={list.title+indx+item}>\n                  <ListItem>\n                    <ListIcon as={CheckIcon} color={'primary.400'} />\n                      {item}\n                  </ListItem>\n                </div>)}\n                </List>\n              </div>)}            \n            </Box>\n            <Box w={'100%'} maxW={{base:'20em', lg:'35em'}} align='center'>\n              <Image src={PresonInComputerImage} w='75%' alt={'Doctory'} mb={'2em'}/>\n            </Box>\n          </Stack>\n          </Box>\n          {/**************  Call to Action Section **************/}\n          <Box d={'flex'} justifyContent='center' w={'100%'}>\n            <Box textAlign='center' w='sm' >\n              <Link to={routes.signup.path}>\n                <Button size={'lg'} isFullWidth colorScheme={'primary'} >\n                  Unirse\n                </Button>\n              </Link>\n            </Box>\n          </Box>\n        </VStack>\n      </Flex>\n    </Container>\n  )\n}\n\n\n","export default __webpack_public_path__ + \"static/media/NotFoundImage.2f089071.svg\";","import React, { useContext } from 'react'\nimport { Link } from \"react-router-dom\";\nimport { VStack, Image, Button, } from '@chakra-ui/react'\nimport NotFoundImage from '../../assets/NotFoundImage.svg';\nimport { UserContext } from '../../provider/AuthProvider';\nimport { routes } from '../../routes/routes';\n\n\nexport const NotfoundPage = () => {\n  const { authContext } = useContext(UserContext)\n  return (\n    <VStack flexGrow={1} justifyContent='center'>\n      <Image \n        maxH={{base:'15rem', md:'20rem'}}\n        src={NotFoundImage}\n        mb='4em'\n      />\n      <Link \n        to={ authContext.isLoggedIn?  routes.home.path : routes.default.path} \n      >\n        <Button size='lg' colorScheme='primary' >\n          Ir a inicio\n        </Button>\n      </Link>\n    </VStack>\n  )\n}\n","export default __webpack_public_path__ + \"static/media/PowerPeople_Emma.1670a887.png\";","import React from 'react'\nimport { Image } from '@chakra-ui/image'\nimport { Box, HStack, Text } from '@chakra-ui/layout'\nimport { UserInformation } from '../http/types'\n\ntype presentationCardPropsTypes = {\n  userData: UserInformation,\n  avatar?: string,\n}\n\nexport const PresetationCard = ({userData, avatar}:presentationCardPropsTypes) => {\n  \n  return (\n    <Box my='1rem'>\n      <HStack maxW={'100%'}>\n        <Box maxW={{base:'30%', md:'20%'}}>\n          <Image borderRadius=\"full\" maxH={'15em'} src={avatar}/>\n        </Box>\n        <Box \n          maxW={{base:'60%', md:'70%'}}\n          textAlign='left' \n          fontSize={{base:'sm', md:'md'}}\n          whiteSpace='nowrap' \n        >\n          <Text \n            textOverflow='ellipsis'\n            overflow='hidden' \n            fontSize={{base:'md', md:'2xl'}}\n          >\n            {userData.first_name + ' ' + userData.last_name}\n          </Text>\n          {userData.dob &&\n            <Text>{userData.dob}</Text>\n          }\n          {userData.blood_type &&\n            <Text>Tipo de sangre: {userData.blood_type}</Text>\n          }\n          {userData.location &&\n            <Text textOverflow='ellipsis' overflow='hidden' >\n              {userData.location}\n            </Text>\n          }\n          {userData.allergies &&\n            <Text textOverflow='ellipsis' overflow='hidden' >\n              Alergias: {userData.allergies.map(x=>x.name).join(', ')}\n            </Text>\n          }\n          <Text textOverflow='ellipsis' overflow='hidden' >\n            {userData.email}\n          </Text>\n        </Box>\n      </HStack>\n    </Box>\n  )\n}\n","import { Container, HStack, Stack } from '@chakra-ui/layout'\nimport { Skeleton, SkeletonCircle } from '@chakra-ui/skeleton'\nimport React from 'react'\n\nexport const PresentationSkeletonCard = ({isLoading}:{isLoading:boolean}) => {\n\n  if (isLoading) {\n    return (\n      <Container>\n        <HStack w='100%'  h='100%' >\n          <Stack w='20%'>\n            <SkeletonCircle size='4rem'/>\n          </Stack>\n          <Stack w='100%' >\n            <Skeleton height=\"1rem\" />\n            <Skeleton height=\"1rem\" />\n            <Skeleton height=\"1rem\" />\n          </Stack>\n        </HStack>\n      </Container>\n    )\n  } else {\n    return <></>\n  }\n\n}\n","import React, {useState, ChangeEvent} from 'react';\nimport { \n  Stack,\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n  Input\n } from '@chakra-ui/react';\nimport { SubmitHandler, useForm } from 'react-hook-form';\nimport { usePasswordValidation } from '../../hooks/usePasswordValidation';\nimport { ValidPasswordChecklist } from '../AuthViews/validPasswordChecklist';\nimport { ChangePasswordData } from '../../http/types';\n\n\ntype ChangePasswordProps = {\n  formId: string;\n  onSubmit: SubmitHandler<ChangePasswordData>;\n}\n\nexport const ChangePasswordForm = ({formId, onSubmit}:ChangePasswordProps) => {\n  const { register, handleSubmit, errors } = useForm<ChangePasswordData>();\n  const [initialPassword, setInitialPassword] = useState<boolean>(false);\n  const [password, setPassword] = useState<string>('');\n\n  const {\n    isValid,\n    hasValidLength,\n    hasNumber,\n    hasUpperCase,\n    hasLowerCase,\n    hasSpecialChar } = usePasswordValidation({ password });\n  \n  const handlePasswordChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setPassword(e.target.value);\n    setInitialPassword(true);\n  }\n\n  return (\n    <Stack>\n      <form id={formId} onSubmit={handleSubmit(onSubmit)}>\n      <FormControl\n        mb='4'\n        isInvalid={Boolean(initialPassword ? !isValid : null)}>\n        <FormLabel htmlFor='password1'>Contraseña</FormLabel>\n        <Input\n          name='password1'\n          type='password'\n          autoComplete='off'\n          placeholder='Contraseña segura'\n          value={password}\n          onChange={handlePasswordChange}\n          ref={register({ required: true })}\n          mb={4}\n        />\n        {!isValid && <ValidPasswordChecklist\n          hasNumber={hasNumber}\n          hasLowerCase={hasLowerCase}\n          hasUpperCase={hasUpperCase}\n          hasSpecialChar={hasSpecialChar}\n          hasValidLength={hasValidLength} />}\n      </FormControl>\n\n      <FormControl\n        mb={4}\n        isInvalid={Boolean(errors.password2)}>\n        <FormLabel htmlFor='password2'>\n          Confirmar contraseña\n        </FormLabel>\n        <Input\n          name='password2'\n          type='password'\n          autoComplete='off'\n          placeholder='Repetir contraseña'\n          onPaste={e => e.preventDefault()}\n          ref={register({\n            required: 'Es obligatorio confirmar la contraseña',\n            validate: (value: string) => value === password || 'Las contraseñas no coinciden'\n          })}\n        />\n        <FormErrorMessage>\n          {errors.password2 && errors.password2.message}\n        </FormErrorMessage>\n      </FormControl>\n      </form>\n\n    </Stack>\n  )\n}","import React, { ChangeEvent, Dispatch, SetStateAction, useState } from 'react'\nimport { DeleteIcon, RepeatIcon } from '@chakra-ui/icons'\nimport { Box, Button, HStack, Icon, Input } from '@chakra-ui/react'\nimport { Allergy, Specialty } from '../../http/types'\nimport { InputArrType } from '../../utils/typesDefinitions'\n\ntype ListProps = {\n  value: Allergy | Specialty;\n  setData: Dispatch<SetStateAction<InputArrType>>;\n  disabled?: boolean;\n}\n\nexport const ListInput = ({value, setData, disabled=false}:ListProps) => {\n  const [toBeDeleted, setToBeDeleted] = useState(true);\n\n  const actionIcon = {\n    icon: toBeDeleted? DeleteIcon : RepeatIcon,\n    colorScheme: toBeDeleted? 'red' : 'blue'\n  }\n\n  const onClick = () => {\n    if (!toBeDeleted) {\n      setToBeDeleted(x => !x);\n      setData(oldData => ({\n        ...oldData, \n        toBeDeleted: oldData.toBeDeleted.filter(x => x.id !== value.id) \n      }))\n    }else {\n      setToBeDeleted(x => !x);\n      setData(oldData => ({\n        ...oldData, \n        toBeDeleted: [...oldData.toBeDeleted, value] \n      }))\n    }\n    \n  }\n  \n  const handleInputChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setData(oldData => {\n      let newToBeAdded = oldData.toBeAdded;\n      newToBeAdded[value.id - 1] = {id: value.id, name: e.target.value};\n      \n      return {\n      ...oldData,\n      toBeAdded: newToBeAdded\n      }\n    })\n  }\n\n  const toBeDeletedSyles = {\n    textDecoration: toBeDeleted? 'none' : 'line-through'\n  }\n\n  return (\n    <div>\n      <HStack mb={2} >\n        <Box \n          bg= 'currentcolor'\n          borderRadius= '50%'\n          w='5px'\n          h='5px'\n          mx='.5em'\n        />\n        <Input\n          style={toBeDeletedSyles}\n          value={value.name}\n          disabled={disabled}\n          onChange={handleInputChange}\n          size='sm'\n          type='text'\n        />\n        {disabled &&\n          <Button \n            variant='ghost' \n            colorScheme={actionIcon.colorScheme}\n            size=\"sm\" \n            onClick={onClick}\n          >\n            <Icon \n              as={actionIcon.icon}\n            />\n          </Button>\n        }\n      </HStack>\n    </div>\n  )\n}\n","import React, { Dispatch, SetStateAction } from 'react'\nimport { Button, FormControl, FormLabel } from '@chakra-ui/react'\nimport { ListInput } from './ListInput'\nimport { InputArrType } from '../../utils/typesDefinitions'\nimport { Allergy, Specialty } from '../../http/types'\n\ntype ArrInputProps = {\n  labelText: string;\n  data: InputArrType;\n  setData: Dispatch<SetStateAction<InputArrType>>;\n}\n\nexport const ArrInput = ({\n  labelText,\n  data,\n  setData,\n}: ArrInputProps) => {\n\n  const addData = () => {\n    const lastId = data.toBeAdded.length + 1;\n    setData(oldData => ({...oldData, toBeAdded: [...oldData.toBeAdded, {id: lastId, name: ''}]}))\n  } \n\n  return (\n    <FormControl mb={4} >\n      <FormLabel htmlFor='specialty'>{labelText}</FormLabel>\n      {data.fetched.map((x: Allergy | Specialty) => (\n        <ListInput \n          key={x.id}\n          value={x}\n          setData={setData}\n          disabled\n        />\n      ))}\n      {data.toBeAdded.map((x: Allergy | Specialty) => (\n        <ListInput \n          key={x.id}\n          value={x}\n          setData={setData}\n        />\n      ))}\n      <Button variant='outline' size=\"xs\" isFullWidth colorScheme='gray' onClick={addData}>\n        + Agregar\n      </Button>\n    </FormControl>\n    )\n}\n","import React, { Dispatch, SetStateAction } from 'react'\nimport {\n  Button,\n  FormControl,\n  FormErrorMessage,\n  FormLabel,\n  Input,\n  Select,\n  Stack,\n} from \"@chakra-ui/react\"\nimport { UserInformation} from '../../http/types';\nimport { useForm } from 'react-hook-form';\nimport { isValidDate } from '../../utils/utils';\nimport { InputArrType, sexTypes, userTypes } from '../../utils/typesDefinitions';\nimport { ArrInput } from './ArrInput';\n\ntype ProfileFormProps = {\n  formId: string;\n  onSubmit: (values:UserInformation) => void;\n  data: UserInformation;\n  onOpenDrawer: () => void;\n  isLoading: boolean;\n  allergies: InputArrType;\n  setAllergies: Dispatch<SetStateAction<InputArrType>>;\n  specialties: InputArrType;\n  setSpecialities: Dispatch<SetStateAction<InputArrType>>;\n}\n\nexport const ProfileForm = ({\n  formId,\n  onSubmit,\n  data,\n  allergies,\n  setAllergies,\n  specialties,\n  setSpecialities,\n  onOpenDrawer,\n  isLoading,\n}:ProfileFormProps) => {\n\n  const { register, handleSubmit, errors, setValue } = useForm<UserInformation>();\n\n  return (\n    <form id={formId} onSubmit={handleSubmit(onSubmit)}>\n      <FormControl\n        mb={4}\n        isRequired\n        isInvalid={Boolean(errors.first_name)}>\n        <FormLabel htmlFor='first_name'>Nombre(s)</FormLabel>\n        <Input\n          name='first_name'\n          type='text'\n          autoComplete='on'\n          placeholder='Juan'\n          defaultValue={data.first_name}\n          ref={register({ required: 'El nombre es obligatorio' })}\n        />\n        <FormErrorMessage>\n          {errors.first_name && errors.first_name.message}\n        </FormErrorMessage>\n      </FormControl>\n\n      <FormControl\n        mb={4}\n        isRequired\n        isInvalid={Boolean(errors.last_name)}>\n        <FormLabel htmlFor='last_name'>Apellidos</FormLabel>\n        <Input\n          name='last_name'\n          type='text'\n          autoComplete='on'\n          placeholder='Pérez'\n          defaultValue={data.last_name}\n          ref={register({ required: 'El apellido es obligatorio' })}\n        />\n        <FormErrorMessage>\n          {errors.last_name && errors.last_name.message}\n        </FormErrorMessage>\n      </FormControl>\n\n      <FormControl\n        mb={4}\n        isRequired\n        isInvalid={Boolean(errors.email)}>\n        <FormLabel htmlFor='email'>Correo</FormLabel>\n        <Input\n          name='email'\n          type='email'\n          disabled={true}\n          placeholder='ejemplo@gmail.com'\n          value={data.email}\n          ref={register}\n        />\n        \n        <FormErrorMessage>\n          {errors.email && errors.email.message}\n        </FormErrorMessage>\n      </FormControl>\n\n      <FormControl\n        mb={4}>\n        <FormLabel>Contraseña</FormLabel>\n        <Button onClick={onOpenDrawer} variant='link' colorScheme='primary'>Cambiar contraseña</Button>\n      </FormControl>\n      \n      <FormControl\n        mb={4}\n        isRequired\n        isInvalid={Boolean(errors.dob)}>\n        <FormLabel htmlFor='dob'>Fecha de nacimiento</FormLabel>\n        <Input\n          name='dob'\n          type='date'\n          autoComplete='on'\n          defaultValue={data.dob}\n          ref={register({\n            required: 'La fecha es obligatoria',\n            validate: value => isValidDate(value) || 'La fecha no es válida',\n            })}\n        />\n        <FormErrorMessage>\n        {errors.dob && errors.dob.message}\n        </FormErrorMessage>\n      </FormControl>\n\n      <FormControl\n        mb={4}>\n        <FormLabel htmlFor='sex'>Sexo</FormLabel>\n          {data.sex && \n          <Select\n            as='select'\n            name='sex'\n            defaultValue={data.sex}\n            onChange= {(e) => setValue('sex', e.target.value)}\n            ref={register}\n          >\n            {sexTypes.map(type => (\n              <option key={type.value} value={type.value}>\n                {type.label}\n              </option>\n            ))}\n          </Select>}\n      </FormControl>\n      \n      <FormControl\n        mb={4}\n      >\n        <FormLabel htmlFor='location'>Lugar de Residencia</FormLabel>\n        <Input\n          name='location'\n          type='text'\n          autoComplete='on'\n          placeholder='Monterrey, Nuevo León'\n          defaultValue={data.location}\n          ref={register}\n        />\n      </FormControl>\n      \n      <FormControl mb={4}>\n        <FormLabel htmlFor='blood_type'>Tipo de Sangre</FormLabel>\n        <Input\n          name='blood_type'\n          type='text'\n          autoComplete='on'\n          placeholder='O+'\n          defaultValue={data.blood_type || ''}\n          ref={register}\n        />\n      </FormControl>\n\n      {data.type.includes(userTypes.MEDIC) &&\n        <FormControl mb={4}>\n          <FormLabel htmlFor='license'>Cédula Profesional</FormLabel>\n          <Input\n            name='license'\n            type='text'\n            placeholder='12345678'\n            defaultValue={data.license || ''}\n            ref={register}\n          />\n        </FormControl>\n      }\n\n      {data.type.includes(userTypes.MEDIC) &&\n        <ArrInput\n          labelText='Specialidad(es)'\n          data={specialties}\n          setData={setSpecialities}\n        />\n      }\n      \n      <ArrInput\n        labelText='Alergia(s)'\n        data={allergies}\n        setData={setAllergies}\n      />\n      \n      <Stack  w={'100%'} align='flex-end'>\n        <Button \n          isLoading={isLoading}\n          colorScheme='primary'\n          type=\"submit\"\n        >\n          Guardar\n        </Button>\n      </Stack>\n    </form>\n  )\n}\n","import React from 'react';\nimport { Table, Tbody, Td, Th, Thead, Tr, Button, Icon} from '@chakra-ui/react';\nimport { UserInformation } from '../../http/types';\nimport { EmptyState } from '../../components/EmptyState';\nimport { DeleteIcon } from '@chakra-ui/icons';\n\ntype MedicsTableProps = {\n  medics: UserInformation[];\n  deleteMedic: (id:number) => void;\n};\n\nexport const MedicsTable = ({ medics, deleteMedic }: MedicsTableProps) => {\n\n  if(medics.length === 0){\n    return <EmptyState text='Sin médicos' />\n  }\n  \n  return (\n    <Table variant=\"striped\">\n      <Thead>\n        <Tr>\n          <Th>Nombre</Th>\n          <Th>Especialidades</Th>\n          <Th>Licencia</Th>\n          <Th></Th>\n        </Tr>\n      </Thead>\n      <Tbody>\n        { medics.map((medic) => (\n          <Tr key={medic.id}>\n          <Td>\n            {medic.first_name + ' ' + medic.last_name}\n          </Td>\n          <Td> {(medic.specialties.length === 0 ? ('-')\n            :\n            (medic.specialties.map((specialty) =>\n              `${specialty.name}`\n            ).join(', ')))}\n          </Td>\n          <Td> {medic.license || '-'}</Td>\n          <Td> \n          <Button variant='outline' colorScheme='red'  size=\"md\" onClick={() => deleteMedic(Number(medic.id))}><Icon \n            w='2em'\n            h='2em'\n            p='.5em'\n            as={DeleteIcon}\n          /></Button></Td>\n        </Tr> \n        ))} \n      </Tbody>\n    </Table>\n  );\n};\n","import { LoginView } from \"../views/AuthViews/LoginView\";\nimport { SignUpView } from \"../views/AuthViews/SignUpView\";\nimport { Home } from \"../views/Landing/Home\";\nimport { Landing } from \"../views/Landing/Landing\";\nimport { NotfoundPage } from \"../views/NotFoundPage/NotfoundPage\";\nimport { PatientConditions } from \"../views/Patient/PatientConditions\";\nimport { ProfileView } from \"../views/Profile/ProfileView\";\nimport { SharedWith } from \"../views/Patient/SharedWith\";\n\ntype route = {\n  path: string,\n  component: React.FC,\n}\n\nexport const publicRoutes: { [name: string]: route } = {\n  default: { path: '/', component: Landing },\n  login: { path: '/login', component: LoginView },\n  signup: { path: '/signup', component: SignUpView },\n  contact: { path: '/contact', component: NotfoundPage },\n  notFound: { path: '/404', component: NotfoundPage },\n}\n\nexport const protectedRoutes: { [name: string]: route } = {\n  profile: { path: '/profile', component: ProfileView },\n  home: { path: '/home', component: Home },\n  patient: { path: '/patient/:id', component: PatientConditions },\n  sharedWith: { path: '/shared-with', component: SharedWith },\n}\n\nexport const routes: { [name: string]: route } = {\n  ...publicRoutes,\n  ...protectedRoutes,\n};\n","import React, { useContext } from 'react';\nimport {\n  Flex,\n  Box,\n  FormControl,\n  FormLabel,\n  FormErrorMessage,\n  Input,\n  Stack,\n  Link as ChakraLink,\n  Button,\n  Heading,\n  useColorModeValue,\n  useToast,\n  Divider,\n  Text,\n  useBreakpointValue,\n  ToastPosition\n} from '@chakra-ui/react';\nimport { Link, useHistory } from \"react-router-dom\";\nimport { http } from '../../http/client';\nimport { useForm } from 'react-hook-form';\nimport { LoginData } from '../../http/types';\nimport { routes } from '../../routes/routes';\nimport { useMutation } from 'react-query';\nimport { UserContext } from '../../provider/AuthProvider';\n\n\nexport const LoginView = () => {\n  const { login } = useContext(UserContext);\n  const { register, handleSubmit, errors } = useForm<LoginData>();\n  const history = useHistory()\n  \n  const toast = useToast();\n  const toastPosition = useBreakpointValue({base:'top', md:'top-right'});\n  \n  const onSuccess = (type: string[]) => {\n    login(type)\n    history.push(routes.home.path)\n  }\n  \n  const onError = (data:Error) => {\n    if(data.message === 'Failed to fetch') data.message = 'Comprueba tu conexión a internet e intenta de nuevo.'\n    toast({\n      title: 'Ups!',\n      description: data.message,\n      status: 'error',\n      duration: 5000,\n      isClosable: true,\n      position: toastPosition as ToastPosition,\n    });\n  }\n\n  const { mutate } = useMutation('login', (values:LoginData) => http.login(values), {onSuccess, onError})\n  \n  const onSubmit = (values: LoginData) => {\n    mutate(values);\n  }\n\n  return (\n    <Flex\n      flexGrow={1}\n      h={'100%'}\n      align={'center'}\n      justify={'center'}\n      bg={useColorModeValue('gray.100', 'gray.800')}\n    >\n      <Stack align={'center'} spacing={8} mx={'auto'} maxW={'lg'} py={12} px={6}>\n        <Heading fontSize={'4xl'}>Iniciar sesión</Heading>\n        <Box\n          p={8}\n          bg={useColorModeValue('white', 'gray.700')}\n          minW='xs'\n          rounded={'lg'}\n          boxShadow={'lg'}\n        >\n\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <FormControl\n              mb='4'\n              isInvalid={Boolean(errors.email)}>\n              <FormLabel htmlFor=\"email\">Correo</FormLabel>\n              <Input\n                name=\"email\"\n                type=\"email\"\n                autoComplete='on'\n                placeholder='ejemplo@gmail.com'\n                ref={register({\n                  required: 'El correo electrónico es obligatorio',\n                  pattern: {\n                    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                    message: 'Ingresa un correo electrónico válido',\n                  },\n                })}\n              />\n              <FormErrorMessage>\n                {errors.email && errors.email.message}\n              </FormErrorMessage>\n            </FormControl>\n\n            <FormControl\n              mb='4'\n              isInvalid={Boolean(errors.password)}>\n              <FormLabel htmlFor='password'>Contraseña</FormLabel>\n              <Input\n                name='password'\n                type=\"password\"\n                autoComplete='off'\n                ref={register({ required: true })}\n              />\n            </FormControl>\n            <Stack spacing={8}>\n              <Button type=\"submit\">Entrar</Button>\n            </Stack>\n          </form>\n          <Divider my={4}/>\n          <Box textAlign={'center'} >\n            <ChakraLink \n              as={Link}\n              to={routes.signup.path}>\n                <Text color={useColorModeValue('primary.500', 'primary.300')}>Crear una nueva cuenta</Text>\n            </ChakraLink>\n          </Box>\n        </Box>\n      </Stack>\n     \n    </Flex>\n  );\n}\n","import React, { ChangeEvent, useState, useContext } from 'react'\nimport {\n  Flex,\n  Box,\n  FormErrorMessage,\n  FormControl,\n  FormLabel,\n  Input,\n  Stack,\n  Button,\n  Heading,\n  useColorModeValue,\n  Container,\n  useToast,\n  Link as ChakraLink,\n  useBreakpointValue,\n  ToastPosition,\n  Select\n} from '@chakra-ui/react'\nimport { useForm } from 'react-hook-form';\nimport { usePasswordValidation } from '../../hooks/usePasswordValidation';\nimport { ValidPasswordChecklist } from './validPasswordChecklist';\nimport { SignUpData } from '../../http/types';\nimport { http } from '../../http/client';\nimport { Link, useHistory } from 'react-router-dom';\nimport { routes } from '../../routes/routes';\nimport { useMutation } from 'react-query';\nimport { UserContext } from '../../provider/AuthProvider';\nimport { userTypes } from '../../utils/typesDefinitions';\n\nexport const SignUpView = () => {\n  const history = useHistory()\n  const { login } = useContext(UserContext);\n  const toast = useToast()\n  const toastPosition = useBreakpointValue({base:'top', md:'top-right'});\n  const { register, handleSubmit, errors } = useForm<SignUpData>();\n\n  const onSuccess = (type:string[]) => {\n    login(type)\n    history.push(routes.home.path)\n  }\n  \n  const onError = (data:Error) => {\n    if(data.message === 'Failed to fetch') data.message = 'Comprueba tu conexión a internet e intenta de nuevo.'\n    toast({\n      title: 'Ups!',\n      description: data.message,\n      status: 'error',\n      duration: 5000,\n      isClosable: true,\n      position: toastPosition as ToastPosition,\n    });\n  }\n\n  const { mutate } = useMutation('signup', (values:SignUpData) => http.signup(values), {onSuccess, onError})\n  \n  const onSubmit = (values: SignUpData) => {\n    mutate(values);\n  }\n\n  const [password, setPassword] = useState<string>('');\n\n  const [initialPassword, setInitialPassword] = useState<boolean>(false);\n\n  const {\n    isValid,\n    hasValidLength,\n    hasNumber,\n    hasUpperCase,\n    hasLowerCase,\n    hasSpecialChar } = usePasswordValidation({ password });\n\n  const handlePasswordChange = (e: ChangeEvent<HTMLInputElement>) => {\n    setPassword(e.target.value);\n    setInitialPassword(true);\n  }\n  \n  const MB = 4\n\n  return (\n    <Container\n      w=\"100%\"\n      h=\"100%\"\n      maxW=\"100%\"\n      d={'flex'}\n      flexGrow={1}\n    >\n      <Flex\n        flexGrow={1}\n        align={'center'}\n        justify={'center'}>\n        <Stack\n          spacing={8}\n          maxW={'lg'}\n          py={12}\n          px={6}>\n          <Stack align={'center'}>\n            <Heading fontSize={'4xl'}>Registrarse</Heading>\n          </Stack>\n          <Box\n            rounded={'lg'}\n            minW={'xs'}\n            bg={useColorModeValue('white', 'gray.700')}\n            boxShadow={'lg'}\n            p={8}>\n\n            <form onSubmit={handleSubmit(onSubmit)}>\n              <FormControl\n                mb={MB}\n                isInvalid={Boolean(errors.first_name)}>\n                <FormLabel htmlFor='first_name'>Nombre</FormLabel>\n                <Input\n                  name='first_name'\n                  type='text'\n                  autoComplete='on'\n                  placeholder='Juan'\n                  ref={register({ required: 'El nombre es obligatorio' })}\n                />\n                <FormErrorMessage>\n                  {errors.first_name && errors.first_name.message}\n                </FormErrorMessage>\n              </FormControl>\n\n              <FormControl\n                mb={MB}\n                isInvalid={Boolean(errors.last_name)}>\n                <FormLabel htmlFor='last_name'>Apellido</FormLabel>\n                <Input\n                  name='last_name'\n                  type='text'\n                  autoComplete='on'\n                  placeholder='Pérez'\n                  ref={register({ required: 'El apellido es obligatorio' })}\n                />\n                <FormErrorMessage>\n                  {errors.last_name && errors.last_name.message}\n                </FormErrorMessage>\n              </FormControl>\n\n              <FormControl\n                mb={MB}\n                isInvalid={Boolean(errors.email)}>\n                <FormLabel htmlFor='email'>Correo</FormLabel>\n                <Input\n                  name='email'\n                  type='email'\n                  autoComplete='on'\n                  placeholder='ejemplo@gmail.com'\n                  ref={register({\n                    required: 'El correo electrónico es obligatorio',\n                    pattern: {\n                      value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n                      message: 'Ingresa un correo electrónico válido',\n                    },\n                  })}\n                />\n                <FormErrorMessage>\n                  {errors.email && errors.email.message}\n                </FormErrorMessage>\n              </FormControl>\n\n              <FormControl\n                mb={MB}\n                isInvalid={Boolean(initialPassword ? !isValid : null)}>\n                <FormLabel htmlFor='password1'>Contraseña</FormLabel>\n                <Input\n                  name='password1'\n                  type='password'\n                  autoComplete='off'\n                  placeholder='Contraseña segura'\n                  value={password}\n                  onChange={handlePasswordChange}\n                  ref={register({ required: true })}\n                  mb={MB / 2}\n                />\n                {!isValid && <ValidPasswordChecklist\n                  hasNumber={hasNumber}\n                  hasLowerCase={hasLowerCase}\n                  hasUpperCase={hasUpperCase}\n                  hasSpecialChar={hasSpecialChar}\n                  hasValidLength={hasValidLength} />}\n              </FormControl>\n\n              <FormControl\n                mb={MB}\n                isInvalid={Boolean(errors.password2)}>\n                <FormLabel htmlFor='password2'>\n                  Confirmar contraseña\n                </FormLabel>\n                <Input\n                  name='password2'\n                  type='password'\n                  autoComplete='off'\n                  placeholder='Repetir contraseña'\n                  onPaste={e => e.preventDefault()}\n                  ref={register({\n                    required: 'Es obligatorio confirmar la contraseña',\n                    validate: (value: string) => value === password || 'Las contraseñas no coinciden'\n                  })}\n                />\n                <FormErrorMessage>\n                  {errors.password2 && errors.password2.message}\n                </FormErrorMessage>\n              </FormControl>\n\n              <FormControl\n                mb={4}>\n                <FormLabel htmlFor='user_type'>Tipo de Cuenta</FormLabel>\n                  <Select\n                    as='select'\n                    name='user_type'\n                    ref={register()}\n                  >\n                    <option value={userTypes.PATIENT}>Paciente</option>\n                    <option value={userTypes.MEDIC}>Médico</option>\n                  </Select>\n              </FormControl>\n              \n              <Button\n                onClick={_ => setInitialPassword(true)}\n                type='submit'>\n                Registrar\n              </Button>\n            </form>\n          </Box>\n          <Box display='flex' justifyContent='center'>\n            <ChakraLink as={Link} to={routes.login.path}>\n              ¿Ya con cuenta? Inicie Sesión\n            </ChakraLink>\n          </Box>\n        </Stack>\n      </Flex>\n    </Container>\n  )\n}","import React, { useState } from 'react'\nimport {\n  Avatar,\n  AvatarBadge,\n  useColorModeValue,\n  useToast,\n  Box,\n  Container,\n  Flex,\n  Heading,\n  Stack,\n  VStack,\n  useDisclosure,\n  useBreakpointValue,\n  ToastPosition,\n} from \"@chakra-ui/react\"\nimport avatar from '../../assets/PowerPeople_Emma.png';\nimport { FaCamera } from 'react-icons/fa';\nimport { InputArrType, userTypes } from '../../utils/typesDefinitions';\nimport { ChangePasswordData, UserInformation, Allergy, Specialty } from '../../http/types';\nimport { http } from '../../http/client';\nimport { ChangePasswordForm } from './ChangePasswordForm';\nimport { setToken } from '../../utils/token';\nimport { useMutation, useQuery } from 'react-query';\nimport { HomeDrawer } from '../../components/HomeDrawer';\nimport { ProfileForm } from './ProfileForm';\n\n\nexport const ProfileView = () => {\n  \n  const [isLoading, setIsLoading] = useState(true)\n\n  const [allergies, setAllergies] = useState<InputArrType>({\n    fetched: [],\n    toBeDeleted: [],\n    toBeAdded: []\n  })\n\n  const [specialties, setSpecialties] = useState<InputArrType>({\n    fetched: [],\n    toBeDeleted: [],\n    toBeAdded: []\n  })\n\n  const toastPosition = useBreakpointValue({base:'top', md:'top-right'});\n  const toast = useToast();\n\n  const [data, setData] = useState<UserInformation>({\n    first_name: '',\n    last_name: '',\n    dob: '',\n    email: '',\n    sex: '',\n    type: [''],\n  });\n\n  const { isOpen, onOpen, onClose } = useDisclosure()\n  \n\n  const onError = (data:Error) => {\n    if(data.message === 'Failed to fetch') data.message = 'Comprueba tu conexión a internet e intenta de nuevo.'\n    toast({\n      title: 'Ups!',\n      description: data.message,\n      status: 'error',\n      duration: 5000,\n      isClosable: true,\n      position: toastPosition as ToastPosition,\n    });\n  }\n\n  // function when is succes on getting profile info\n  const ok = (_:any, data:UserInformation) => {\n    setData(data);    \n    setAllergies( allergies => ({...allergies, fetched: data.allergies || []}));\n    \n    data.type.includes(userTypes.MEDIC) &&\n      setSpecialties( specialties => ({...specialties, fetched: data.specialties || []}));\n    \n    setIsLoading(false);\n  };\n\n\n  // Get profile info\n  useQuery('profile', () => http.getProfileInfo(), {\n    onSuccess: (data:UserInformation) => ok(null, data),\n    onError,\n    onSettled: () => setIsLoading(false)\n  })\n  \n\n  // Mutation - UPDATE PROFILE\n  const { mutate: mutateProfile } = useMutation('updateProfile',\n    (values:UserInformation) => http.updateProfile(values), {\n    onSuccess: () => {\n      toast({\n        description: '¡Tu información se ha guardado con éxito!',\n        status: 'success',\n        duration: 5000,\n        isClosable: true,\n        position: toastPosition as ToastPosition,\n      })\n    },\n    onError,\n    onSettled: () => setIsLoading(false)\n  });\n  \n  // Mutation - NEW ALLERGIES\n  const { mutate: mutateNewAllergies } = useMutation('newAllergies', (values:Allergy[]) => http.newAllergies(values), {\n    onSuccess: (newAllergies:Allergy[]) => {\n      setAllergies(oldAllergies => ({\n        ...oldAllergies,\n        fetched: [...oldAllergies.fetched, ...newAllergies],\n        toBeAdded: []\n      }))\n    },\n    onError,\n    onSettled: () => setIsLoading(false)\n  });\n\n  // Mutation - DELETE ALLERGIES\n  const { mutate: mutateDeleteAllergies } = useMutation('deleteAllergies', (values:Allergy[]) => http.deleteAllergies(values), {\n    onSuccess: (deletedAllergies:number[] | undefined) => {\n      setAllergies(oldAllergies => {\n        const newFetched = oldAllergies.fetched.filter(x => !deletedAllergies?.includes(x.id));\n        return {\n          ...oldAllergies,\n          fetched: [...newFetched],\n          toBeDeleted: []\n        }\n      })\n    },\n    onError,\n    onSettled: () => setIsLoading(false)\n  });\n\n  // Mutation - NEW SPECIALTIES\n  const { mutate: mutateNewSpecialties } = useMutation('newSpecialtes', (values:Specialty[]) => http.newSpecialties(values), {\n    onSuccess: (newSpecialties:Specialty[]) => {\n      setSpecialties(oldSpecialties => ({\n        ...oldSpecialties,\n        fetched: [...oldSpecialties.fetched, ...newSpecialties],\n        toBeAdded: []\n      }))\n    },\n    onError,\n    onSettled: () => setIsLoading(false)\n  });\n\n  // Mutation - DELETE SPECALTIES\n  const { mutate: mutateDeleteSpecalties } = useMutation('deleteSpecaltes', (values:Specialty[]) => http.deleteSpecialtes(values), {\n    onSuccess: (deletedSpecialties:number[] | undefined) => {\n      setSpecialties(oldSpecalties => {\n        const newFetched = oldSpecalties.fetched.filter(x => !deletedSpecialties?.includes(x.id));\n        return {\n          ...oldSpecalties,\n          fetched: [...newFetched],\n          toBeDeleted: []\n        }\n      })\n    },\n    onError,\n    onSettled: () => setIsLoading(false)\n  });\n\n  // Mutation - CHANGE PASSWORD\n  const { mutate: mutatePassword } = useMutation('changePassword', (values:ChangePasswordData) => http.updatePassword(values), {\n    onSuccess: ({ token }:{token:string}) => {\n      setToken(token)\n      onClose()\n      toast({\n        title: 'Contraseña actualizada',\n        description: 'Tu contraseña se ha cambiado exitosamente. Los otros equipos dónde utilices doctory tendrán que volver a iniciar sesión.',\n        status: 'success',\n        duration: 10000,\n        isClosable: true,\n        position: toastPosition as ToastPosition,\n      })\n    },\n    onError,\n    onSettled: () => setIsLoading(false)\n  });\n\n  // User Profile sumbit\n  const onSubmit = (values: UserInformation) => {\n    setIsLoading(true);\n    \n    mutateProfile(values);\n\n    if(allergies.toBeAdded.length !== 0) \n      mutateNewAllergies(allergies.toBeAdded)\n    \n    if(data.type.includes(userTypes.MEDIC) && specialties.toBeAdded.length !== 0) \n      mutateNewSpecialties(specialties.toBeAdded)\n    \n    if(allergies.toBeDeleted.length !== 0) \n      mutateDeleteAllergies(allergies.toBeDeleted)\n  \n    if(specialties.toBeDeleted.length !== 0) \n      mutateDeleteSpecalties(specialties.toBeDeleted) \n  }\n\n  const onChangePassword = (values:ChangePasswordData) => {\n    mutatePassword(values);\n  }\n\n  return (\n    <Container\n    w=\"100vw\"\n    h=\"100%\"\n    maxW=\"95%\"\n    d={'flex'}\n    flexGrow={1}\n    mx={{base:'1em', md:'2em'}}\n    >\n      <HomeDrawer \n        drawerPlacement= {useBreakpointValue({base: 'bottom', lg: 'right'})}\n        isOpen={isOpen}\n        onClose={onClose}\n        headerText='Actualizar contraseña'\n        Form={ChangePasswordForm({formId: 'change-password-form', onSubmit: onChangePassword})}\n        buttonProps={{\n          text: 'Cambiar contraseña',\n          formId: 'change-password-form'\n        }}\n      />\n\n    <Flex\n      flexGrow={1}\n      align={'flex-start'}\n      justify={'center'}\n      py={12}\n      w={'100%'}\n    >\n      <VStack w={'100%'} mb={12} >\n        <Heading fontSize={'3xl'}>Editar Perfil</Heading>\n        <Stack w={'100%'} align={'center'}>\n          <Avatar src={avatar} size=\"2xl\" mb={4}>\n            <AvatarBadge\n              boxSize=\".8em\"\n              borderColor=\"transparent\"\n              bg=\"white\"\n              _hover={{color:'gray.500'}}>\n              <FaCamera />\n            </AvatarBadge>\n          </Avatar>\n        </Stack>\n        <Box\n          rounded={'lg'}\n          minW={{base:'xs', md: 'md'}}\n          bg={useColorModeValue('white', 'gray.700')}\n          boxShadow={'lg'}\n          p={8}\n        >\n          <ProfileForm \n            formId='profile-form'\n            onSubmit={onSubmit}\n            data={data}\n            onOpenDrawer={onOpen}\n            allergies={allergies}\n            setAllergies={setAllergies}\n            specialties={specialties}\n            setSpecialities={setSpecialties}\n            isLoading={isLoading}\n          />\n        </Box>\n      </VStack>\n    </Flex>\n  </Container>\n  )\n}","import React, { useContext, useState } from 'react';\nimport {\n  Box,\n  Image,\n  Tabs,\n  TabList,\n  Tab,\n  TabPanel,\n  TabPanels,\n  VStack,\n  useToast,\n  useBreakpointValue,\n  ToastPosition,\n  useDisclosure,\n  DrawerProps,\n  Icon,\n} from '@chakra-ui/react';\nimport { UserContext } from '../../provider/AuthProvider';\nimport DoctorsInComputerImage from '../../assets/DoctorsInComputerImage.svg';\nimport { BackgroundSubtypeData, ConditionData, UserInformation, ShareData } from '../../http/types';\nimport { http } from '../../http/client';\nimport { useMutation, useQuery } from 'react-query';\nimport { ConditionsTimeLine } from '../Conditions/ConditionsTimeLine';\nimport { ConditionsTable } from '../Conditions/ConditionsTable';\nimport { PatientsTable } from '../Medic/PatientsTable';\nimport { NewConditionForm } from '../Conditions/NewConditionForm';\nimport { AddIcon } from '@chakra-ui/icons';\nimport { MdShare } from \"react-icons/md\"\nimport { userTypes } from '../../utils/typesDefinitions';\nimport { useParams } from 'react-router-dom';\nimport { ActionButton } from '../../components/ActionButton';\nimport { buttonSubmit, HomeDrawer } from '../../components/HomeDrawer';\nimport { ReactJSXElement } from '@emotion/react/types/jsx-namespace';\nimport { ShareHistoryForm } from '../Patient/ShareHistoryForm';\nimport { TableSkeleton } from '../../components/TableSkeleton';\nimport { TimeLineSkeleton } from '../../components/TimeLine/TimeLineSkeleton';\n\n\nexport const Home = () => {\n  const { authContext } = useContext(UserContext)\n  const {id: patientId} = useParams<{id:string}>();\n  const lastTabIndex = localStorage.getItem('tableTabIndex');\n\n  const { isOpen, onOpen, onClose } = useDisclosure() \n  const [patients, setPatients] = useState<UserInformation[]>([])\n  const [backgroundSubtypes, setBackgroundSubtype] = useState<BackgroundSubtypeData[]>([])\n  const [conditions, setConditions] = useState<ConditionData[]>([])\n  const [tabIndex, setTabIndex] = useState(lastTabIndex? Number(lastTabIndex): 0);\n\n  const [drawerContent, setDrawerContent] = useState<{headerText: string, Form: ReactJSXElement, buttonProps: buttonSubmit}>({\n    headerText: '',\n    Form: <></>,\n    buttonProps: {} as buttonSubmit,\n  })\n\n  const toast = useToast();\n  const toastPosition = useBreakpointValue({base:'top', md:'top-right'});\n  const drawerPlacement = useBreakpointValue({base: 'bottom', lg: 'right'});\n  \n  const isMedic = authContext.type?.includes(userTypes.MEDIC);\n\n  const handleTabsChange = (index:number) => {\n    setTabIndex(index);\n    localStorage.setItem('tableTabIndex', String(index));\n  };\n\n  const onOpenCond = () => {\n    setDrawerContent({\n      headerText: 'Nueva condición',\n      Form: <NewConditionForm\n        onSubmit={onSubmitNewCondition}\n        formId='form-condition'\n        backgroundSubtypes={backgroundSubtypes}/>,\n      buttonProps: {\n        formId: 'form-condition',\n        icon: <AddIcon/>,\n        text: 'Añadir',\n      }\n    })\n    onOpen()\n  }\n\n  const onOpenShare = () => {\n    setDrawerContent({\n      headerText: 'Compartir historia clínica',\n      Form: <ShareHistoryForm\n        onSubmit={onSubmitShare}\n        formId='form-share'/>,\n      buttonProps: {\n        formId: 'form-share',\n        icon: <Icon as={MdShare}/>,\n        text: 'Compartir',\n      }\n    })\n    onOpen()\n  }\n\n  const onError = (data:Error) => {\n    if(data.message === 'Failed to fetch') data.message = 'Comprueba tu conexión a internet e intenta de nuevo.'\n    toast({\n      title: 'Ups!',\n      description: data.message,\n      status: 'error',\n      duration: 5000,\n      isClosable: true,\n      position: toastPosition as ToastPosition,\n    });\n  }\n\n  const onSuccessNewCondition = (data:ConditionData) => {\n    const conds = [...conditions, data]\n    conds.sort((x, y) => x.date_of_diagnosis < y.date_of_diagnosis ? 1 : -1)\n    setConditions(conds)\n    onClose();\n    toast({\n      title: 'Condición creada',\n      description: 'Se ha añadido una nueva condición a tu historia clínica',\n      status: 'success',\n      duration: 5000,\n      isClosable: true,\n      position: toastPosition as ToastPosition,\n    });\n  }\n\n  const onSuccessShareHistory = () => {\n    onClose();\n    toast({\n      title: 'Hisoria clínica compartida',\n      description: 'Se ha compartido tu historia clínica',\n      status: 'success',\n      duration: 5000,\n      isClosable: true,\n      position: toastPosition as ToastPosition,\n    });\n  }\n\n  const { mutate: mutateNewCondition } = useMutation('newCondition', (values:ConditionData) => http.newCondition(values), {onSuccess: onSuccessNewCondition, onError})\n\n  const onSubmitNewCondition = (values:ConditionData) => {\n    mutateNewCondition(values);\n  }\n\n  const { mutate: mutateShareHistory } = useMutation('shareHistory', (values:ShareData) => http.shareHistory(values), {onSuccess: onSuccessShareHistory, onError})\n\n  const onSubmitShare = (values:ShareData) => {\n    mutateShareHistory(values)\n  }\n\n  const {isFetchedAfterMount: isPatintsFetched} = useQuery('patients', () => http.getPatients(), {\n    enabled: isMedic,\n    onSuccess: (data:UserInformation[]) => setPatients(data),\n    onError\n  })\n\n  const {isFetchedAfterMount: isConditionsFetched} = useQuery('conditions', () => http.conditions(Number(patientId)), {\n    onSuccess: (data:ConditionData[]) => setConditions(data),\n    onError\n  })\n\n  useQuery('background-subtypes', () => http.backgroundSubtypes(), {\n    onSuccess: (data:BackgroundSubtypeData[]) => setBackgroundSubtype(data),\n    onError\n  })\n\n\n  return ( <>\n    <VStack>\n      <Image \n        maxH='15rem'\n        src={DoctorsInComputerImage} />\n      <Box\n        w='100%'\n        pt='2rem'\n        maxW={{base: '100%', md: '75%', lg: '50%'}} >\n\n        <Tabs isFitted index={tabIndex} onChange={handleTabsChange}>\n          <TabList>\n            {isMedic && <Tab>Pacientes</Tab>}\n            <Tab>Mis condiciones</Tab>\n            <Tab>Lista de condiciones</Tab>\n          </TabList>\n\n          <TabPanels>\n            {isMedic &&\n            <TabPanel>\n              {isPatintsFetched && <PatientsTable patients={patients} />}\n              <TableSkeleton isLoading={!isPatintsFetched} />\n            </TabPanel>}\n            <TabPanel>\n              {isConditionsFetched && <ConditionsTimeLine conditions={conditions} />}\n              <TimeLineSkeleton isLoading={!isConditionsFetched} />\n            </TabPanel>\n            <TabPanel overflowX={{base: 'scroll', lg: 'visible'}}>\n              {isConditionsFetched &&  <ConditionsTable conditions={conditions} />}\n              <TableSkeleton isLoading={!isConditionsFetched} />\n            </TabPanel>\n          </TabPanels>\n          </Tabs>\n      </Box>\n    </VStack>\n    \n    <HomeDrawer\n      onClose={onClose}\n      isOpen={isOpen}\n      drawerPlacement={drawerPlacement as DrawerProps['placement']}\n      {...drawerContent}\n    />\n\n    {(tabIndex !== 0 || !isMedic) &&\n    <>\n      <Box\n        display='inline-block'\n        ml='auto'\n        mr='1rem'\n        mb='1rem'\n        position='sticky'\n        bottom='4rem'\n        right='1rem'\n        onClick={onOpenShare}\n      >\n        <ActionButton icon={MdShare} />\n      </Box>\n\n      <Box\n        display='inline-block'\n        ml='auto'\n        mr='1rem'\n        mb='1rem'\n        position='sticky'\n        bottom='1rem'\n        onClick={onOpenCond}\n      >\n        <ActionButton/>\n      </Box>\n    </>\n    }\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { useParams } from 'react-router';\nimport { useQuery } from 'react-query';\nimport {\n  useBreakpointValue,\n  ToastPosition,\n  Tabs,\n  TabList,\n  TabPanels,\n  Tab,\n  TabPanel,\n  Box,\n  VStack,\n  useToast\n} from '@chakra-ui/react';\nimport avatar from '../../assets/PowerPeople_Emma.png';\nimport { PresetationCard } from '../../components/PresentationCard';\nimport { ConditionsTimeLine } from '../Conditions/ConditionsTimeLine';\nimport { ConditionsTable } from '../Conditions/ConditionsTable';\nimport { ConditionData, UserInformation } from '../../http/types';\nimport { http } from '../../http/client';\nimport { PresentationSkeletonCard } from '../../components/PresentationSkeletonCard';\nimport { TimeLineSkeleton } from '../../components/TimeLine/TimeLineSkeleton';\nimport { TableSkeleton } from '../../components/TableSkeleton';\n\nexport const PatientConditions = () => {\n  const {id: patientId} = useParams<{id:string}>();\n  const [userData, setUserData] = useState<UserInformation>({\n    first_name: '',\n    last_name: '',\n    dob: '',\n    email: '',\n    sex: '',\n    type: [''],\n  })\n  \n  const [conditions, setConditions] = useState<ConditionData[]>([])\n\n  const toast = useToast();\n  const toastPosition = useBreakpointValue({base:'top', md:'top-right'});\n  \n  const onError = (data:Error) => {\n    if(data.message === 'Failed to fetch') data.message = 'Comprueba tu conexión a internet e intenta de nuevo.'\n    toast({\n      title: 'Ups!',\n      description: data.message,\n      status: 'error',\n      duration: 5000,\n      isClosable: true,\n      position: toastPosition as ToastPosition,\n    });\n  }\n\n  const {isFetchedAfterMount: isConditionsFetched} = useQuery('conditions', () => http.conditions(Number(patientId)), {\n    onSuccess: (data:ConditionData[]) => setConditions(data),\n    onError\n  })\n  \n  const {isFetchedAfterMount: isProfileFetched} = useQuery('profile', () => http.getProfileInfo(Number(patientId)), {\n    onSuccess: (data:UserInformation) => setUserData(data),\n    onError\n  })\n\n  return (\n    <>\n      <VStack pt='2rem'>\n        <PresentationSkeletonCard isLoading={!isProfileFetched} />\n        {isProfileFetched && <PresetationCard userData={userData} avatar={avatar} />}\n        <Box\n          w='100%'\n          pt='2rem'\n          maxW={{base: '100%', md: '75%', lg: '50%'}}\n        >\n          <Tabs isFitted>\n            <TabList>\n              <Tab>Línea del tiempo</Tab>\n              <Tab>Lista de condiciones</Tab>\n            </TabList>\n\n            <TabPanels>\n              <TabPanel>\n                <TimeLineSkeleton isLoading={!isConditionsFetched}/>\n                {isConditionsFetched && <ConditionsTimeLine conditions={conditions}/>}\n              </TabPanel>\n              <TabPanel overflowX={{base: 'scroll', lg: 'visible'}}>\n                <TableSkeleton isLoading={!isConditionsFetched} />\n                {isConditionsFetched && <ConditionsTable conditions={conditions}/>}\n              </TabPanel>\n            </TabPanels>\n          </Tabs>\n        </Box>\n      </VStack>\n    </>\n  )\n}\n","import React, { useState } from 'react';\nimport {\n  Box,\n  Image,\n  VStack,\n  ToastPosition,\n  useToast,\n  useBreakpointValue,\n  useDisclosure,\n  DrawerProps,\n  Icon,\n} from '@chakra-ui/react';\nimport { UserInformation, ShareData } from '../../http/types';\nimport { http } from '../../http/client';\nimport { useQuery, useMutation } from 'react-query';\nimport { MedicsTable } from './MedicsTable';\nimport { TableSkeleton } from '../../components/TableSkeleton';\nimport DoctorsInComputerImage from '../../assets/DoctorsInComputerImage.svg';\nimport { ActionButton } from '../../components/ActionButton';\nimport { buttonSubmit, HomeDrawer } from '../../components/HomeDrawer';\nimport { ShareHistoryForm } from './ShareHistoryForm';\nimport { MdShare } from 'react-icons/md';\nimport { ReactJSXElement } from '@emotion/react/types/jsx-namespace';\n\nexport const SharedWith = () => {\n  const toast = useToast();\n  const toastPosition = useBreakpointValue({ base: 'top', md: 'top-right' });\n  const drawerPlacement = useBreakpointValue({ base: 'bottom', lg: 'right' });\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const [medics, setMedics] = useState<UserInformation[]>([]);\n  \n  const [drawerContent, setDrawerContent] = useState<{\n    headerText: string;\n    Form: ReactJSXElement;\n    buttonProps: buttonSubmit;\n  }>({\n    headerText: '',\n    Form: <></>,\n    buttonProps: {} as buttonSubmit,\n  });\n\n  const onError = (data: Error) => {\n    if (data.message === 'Failed to fetch')\n      data.message = 'Comprueba tu conexión a internet e intenta de nuevo.';\n    toast({\n      title: 'Ups!',\n      description: data.message,\n      status: 'error',\n      duration: 5000,\n      isClosable: true,\n      position: toastPosition as ToastPosition,\n    });\n  };\n\n  const { isFetchedAfterMount: isMedicsFetched } = useQuery(\n    'medics',\n    () => http.getMedics(),\n    {\n      onSuccess: (data: UserInformation[]) => setMedics(data),\n      onError,\n    }\n  );\n\n  const successDelete = ({id}) => {\n    const newMedics = medics.filter((medic) => medic.id !== id);\n    setMedics(newMedics);\n    toast({\n      title: 'Médico eliminado',\n      description: 'Se ha dejado de compartir tu historia clínica',\n      status: 'success',\n      duration: 5000,\n      isClosable: true,\n      position: toastPosition as ToastPosition,\n    });\n  };\n\n  const { mutate: mutateDeleteMedic } = useMutation(\n    'deleteMedic',\n    (id: number) => http.removeShare(id),\n    { onSuccess: successDelete, onError }\n  );\n\n  const deleteMedic = (id: number) => {\n    mutateDeleteMedic(id);\n  };\n\n  const onSuccessShareHistory = (medic: UserInformation) => {\n    setMedics(m => {\n      const newMedics = m.filter(med => med.id !== medic.id);\n      return [...newMedics, medic];\n    });\n    onClose();\n    toast({\n      title: 'Hisoria clínica compartida',\n      description: 'Se ha compartido tu historia clínica',\n      status: 'success',\n      duration: 5000,\n      isClosable: true,\n      position: toastPosition as ToastPosition,\n    });\n  };\n\n  const { mutate: mutateShareHistory } = useMutation(\n    'shareHistory',\n    (values: ShareData) => http.shareHistory(values),\n    { onSuccess: onSuccessShareHistory, onError }\n  );\n\n  const onSubmitShare = (values: ShareData) => {\n    mutateShareHistory(values);\n  };\n\n  const onOpenShare = () => {\n    setDrawerContent({\n      headerText: 'Compartir historia clínica',\n      Form: <ShareHistoryForm onSubmit={onSubmitShare} formId=\"form-share\" />,\n      buttonProps: {\n        formId: 'form-share',\n        icon: <Icon as={MdShare} />,\n        text: 'Compartir',\n      },\n    });\n    onOpen();\n  };\n\n  return (\n    <>\n      <VStack>\n        <Image maxH=\"15rem\" src={DoctorsInComputerImage} />\n        <Box\n          w=\"100%\"\n          pt=\"2rem\"\n          maxW={{ base: '100%', md: '75%', lg: '50%' }}\n          overflowX={{ base: 'scroll', lg: 'visible' }}\n        >\n          {isMedicsFetched && (\n            <MedicsTable medics={medics} deleteMedic={deleteMedic} />\n          )}\n          <TableSkeleton isLoading={!isMedicsFetched} />\n        </Box>\n      </VStack>\n      <HomeDrawer\n        onClose={onClose}\n        isOpen={isOpen}\n        drawerPlacement={drawerPlacement as DrawerProps['placement']}\n        {...drawerContent}\n      />\n      <Box\n        display=\"inline-block\"\n        ml=\"auto\"\n        mr=\"1rem\"\n        mb=\"1rem\"\n        position=\"sticky\"\n        bottom=\"4rem\"\n        right=\"1rem\"\n        onClick={onOpenShare}\n      >\n        <ActionButton icon={MdShare} />\n      </Box>\n    </>\n  );\n};\n","import React, { useContext, useState, useEffect } from 'react'\nimport { Link } from \"react-router-dom\";\nimport {\n    Box,\n    Flex,\n    IconButton,\n    Button,\n    Stack,\n    Collapse,\n    useDisclosure,\n    Link as ChackraLink,\n    useColorModeValue\n  } from '@chakra-ui/react'\n  import {\n    HamburgerIcon,\n    CloseIcon,\n  } from '@chakra-ui/icons'\n  import { ColorModeSwitcher } from \"../../theme/ColorModeSwitcher\";\n  import { UserContext } from '../../provider/AuthProvider';\nimport { routes } from \"../../routes/routes\";\n\ntype NavItem = {\n  label: string;\n  path: string;\n}\n\nexport const Navbar = () => {\n  const { authContext, logout } = useContext(UserContext)\n  const { isOpen, onToggle } = useDisclosure();\n  const [navbarItems, setNavbarItems] = useState<NavItem[]>([]);\n  const [homePath, setHomePath] = useState('/')\n  const mobileContainerHover = useColorModeValue('gray.100', 'gray.700');\n\n  useEffect(() => {\n    const loggedInItems:NavItem[] = [\n      {label: 'Perfil', path: routes.profile.path},\n      {label: 'Mis médicos', path: routes.sharedWith.path},\n    ];\n    const loggedOutItems:NavItem[] = [];\n\n    if (authContext.isLoggedIn) {\n      setHomePath(routes.home.path);\n      setNavbarItems(loggedInItems);\n    }else{\n      setHomePath(routes.default.path)\n      setNavbarItems(loggedOutItems);\n    }\n  }, [authContext])\n\n  return (\n    <Box>\n      <Flex\n        minH={'60px'}\n        py={{ base: 2 }}\n        px={{ base: 4 }}\n        borderBottom={1}\n        borderStyle={'solid'}\n        align={'center'}>\n        <Flex\n          flex={{ base: 1, md: 'auto' }}\n          ml={{ base: -2 }}\n          display={{ base: 'flex', md: 'none' }}>\n          <IconButton\n            onClick={onToggle}\n            icon={\n              isOpen ? <CloseIcon w={3} h={3} /> : <HamburgerIcon w={5} h={5} />\n            }\n            variant={'ghost'}\n            aria-label={'Toggle Navigation'}\n          />\n        </Flex>\n        <Flex flex={{ base: 1 }} justify={{ base: 'center', md: 'start' }}>\n            <ChackraLink\n              as={Link}\n              to={homePath}\n              fontFamily={'heading'}\n              fontSize={'1em'}\n              fontWeight={'bold'}\n              my='auto'\n            >\n              Doctory\n            </ChackraLink>\n          <Flex display={{ base: 'none', md: 'flex' }} ml={10} alignItems='center'>\n            <Stack direction={'row'} alignItems='center' spacing={4}>\n              {navbarItems.map((navItem) => (\n                <ChackraLink key={navItem.label} as={Link} to={navItem.path ?? '/'} fontSize={'sm'} fontWeight={600} sx={{display:'block'}}>\n                    {navItem.label}\n                </ChackraLink>\n              ))}\n              <ColorModeSwitcher display={{ base: 'none', md: 'flex' }}/>\n            </Stack>\n          </Flex>\n        </Flex>\n\n        <Stack\n          flex={{ base: 1, md: 0 }}\n          justify={'flex-end'}\n          direction={'row'}\n          spacing={6}\n        >\n          {!authContext.isLoading &&\n            authContext.isLoggedIn ? (\n              <Button as={Link} to={routes.default.path} onClick={logout} size={'md'} fontSize={'sm'} variant={'ghost'}>\n                Cerrar Sesión\n              </Button>\n            ):(\n              <Button as={Link} to={routes.login.path} size={'md'} fontSize={'sm'} variant={'ghost'}>\n                Iniciar sesión\n              </Button>\n            )\n          }\n        </Stack>\n      </Flex>\n\n      <Collapse in={isOpen} animateOpacity>\n        <Stack\n          borderBottom='0.5px solid gray'\n          py={4}\n          display={{ md: 'none' }}>\n          {navbarItems.map((navItem) => (\n            <Link key={navItem.label} to={navItem.path ?? '/'} onClick={onToggle}>\n              <Box\n                mx={3}\n                p={1}\n                _hover={{bg: mobileContainerHover}}\n              >\n              {navItem.label}\n              </Box>\n            </Link>\n          ))}\n          <Box\n            mx={3}\n            p={1}\n            d='flex'\n            justifyContent='end'\n            onClick={onToggle}>\n              <ColorModeSwitcher display={{base: 'flex', md: 'none'}}/>\n          </Box>\n        </Stack>\n      </Collapse>\n    </Box>\n  );\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Box, Flex, Stack, Text } from '@chakra-ui/layout'\nimport { routes } from '../../routes/routes'\nimport { useColorModeValue } from '@chakra-ui/color-mode'\n\nexport const Footer = () => {\n  return (\n    <Box as=\"footer\" py=\"5\" borderTop='1px solid' borderColor={useColorModeValue('gray.300', 'gray.700')}>\n      <Flex\n        direction={{base: 'column', md: 'row'}}\n        maxW={{base: 'xl', md: '7xl'}}\n        mx=\"auto\"\n        px={{base: '6', md: '8'}}\n        align=\"center\"\n        justifyContent='center'\n      >\n        <Stack\n          my={{base: '3', md: 0}}\n          direction={{base: 'column', md: 'row'}}\n          marginStart={{md: '8'}}\n          fontSize=\"sm\"\n          spacing={{base: '2', md: '8'}}\n          textAlign={{base: 'center', md: 'start'}}\n        >\n          <Link to={routes.default.path}>\n            <Text color={useColorModeValue('primary.500', 'primary.300')}>&copy; {new Date().getFullYear()}{' '}Doctory</Text>\n          </Link>\n          {/* TODO: add terms and conditions */}\n          <Text>Términos y condiciones</Text>\n        </Stack>\n      </Flex>\n    </Box>\n  )\n}","import { Container, Stack, Text } from '@chakra-ui/layout'\nimport { Progress } from '@chakra-ui/progress'\nimport React from 'react'\n\nexport const LoadingView = () => {\n  return (\n    <Container\n      w=\"100%\"\n      h=\"100%\"\n      maxW=\"100%\"\n      d={'flex'}\n      flexGrow={1}\n      justifyContent='center'\n      alignItems='center'\n    >\n      <Stack spacing='5' width='100%'>\n        <Text fontSize=\"4xl\" textAlign='center' >Doctory</Text>\n        <Progress size=\"xs\" isIndeterminate colorScheme='primary' />\n      </Stack>\n    </Container>\n  )\n}\n","import { Box } from '@chakra-ui/layout';\nimport React, { useContext } from 'react';\nimport { BrowserRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport { Navbar } from '../views/Navbar/Navbar';\nimport { protectedRoutes, publicRoutes } from './routes';\nimport { useColorModeValue } from '@chakra-ui/color-mode';\nimport { Footer } from '../views/Footer/Footer';\nimport { UserContext } from '../provider/AuthProvider';\nimport { LoadingView } from '../views/AuthViews/LoadingView';\n\nexport const AppRouter = () => {\n  const { authContext } = useContext(UserContext)\n\n  return (\n    <Box d={'flex'} alignItems={'center'} flexDirection={'column'} minH={'100vh'}>\n      <Router>\n        <Box w='100%'>\n          <Navbar />\n        </Box>\n        <Box h='100%' width='100%' d='flex' flexGrow={1} flexDirection={'column'} bg={useColorModeValue('gray.100', 'gray.800')}>\n          { authContext.isLoading\n            ? <LoadingView />\n            : (\n              <Switch>\n                {Object.keys(publicRoutes).map(k => (\n                  <Route key={k} exact={k !== '404'} path={publicRoutes[k].path} component={publicRoutes[k].component}/>  \n                ))}\n\n                {Object.keys(protectedRoutes).map(k => (\n                  <Route key={k} exact\n                    path={protectedRoutes[k].path}\n                    render= { () => {\n                      const Component = protectedRoutes[k].component;\n                      return authContext.isLoggedIn\n                      ? <Component /> \n                      : <Redirect to={publicRoutes.login.path}/>\n                    }}\n                  />\n                ))\n                }\n                <Redirect to={publicRoutes.notFound.path} />\n              </Switch>\n            )\n          }\n          <Footer />\n        </Box>\n      </Router>\n    </Box>\n  )\n}\n","import { extendTheme } from \"@chakra-ui/react\"\n\nexport const customTheme =  extendTheme({\n  colors: {\n    primary: {\n      50: '#e9e8ff',\n      100: '#c3c0f5',\n      200: '#9a97e8',\n      300: '#6f6fdd',\n      400: '#464ad3',\n      500: '#302cb9',\n      600: '#2d2291',\n      700: '#241769',\n      800: '#170c41',\n      900: '#0c041c'\n    }\n  }\n})\n","import * as React from \"react\"\nimport { ChakraProvider } from \"@chakra-ui/react\"\nimport { AppRouter } from \"./routes/AppRouter\"\nimport { customTheme } from \"./theme/customTheme\"\nimport { QueryClient, QueryClientProvider } from 'react-query'\nimport { AuthProvider } from \"./provider/AuthProvider\"\n \nconst queryClient = new QueryClient()\n\nexport const DoctoryApp = () => (\n  <AuthProvider>\n    <QueryClientProvider client={queryClient}>\n      <ChakraProvider theme={customTheme}>\n        <AppRouter />\n      </ChakraProvider>\n    </QueryClientProvider>\n  </AuthProvider>\n)\n","import { ReportHandler } from \"web-vitals\"\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\",\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\",\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It is the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\",\n      )\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import { ColorModeScript } from \"@chakra-ui/react\"\nimport * as React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { DoctoryApp } from \"./DoctoryApp\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <ColorModeScript />\n    <DoctoryApp />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorker.unregister()\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}